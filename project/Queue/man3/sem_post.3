'\" t
.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) 2006 Michael Kerrisk <mtk-manpages@gmx.net>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.TH SEM_POST 3 2006-03-25 "Linux 2.6.16" "Linux Programmer's Manual"
.SH NAME
sem_post \- unlock a semaphore
.SH SYNOPSIS
.nf
.B #include <semaphore.h>
.sp
.BI "int sem_post(sem_t *" sem );
.fi
.SH DESCRIPTION
.BR sem_post ()
increments (unlocks) the semaphore pointed to by
.IR sem .
If the semaphore's value consequently becomes greater than zero,
then another process or thread blocked in a 
.BR sem_wait (3)
call will be woken up and proceed to lock the semaphore.
.SH RETURN VALUE
.BR sem_post ()
returns 0 on success; 
on error, the value of the semaphore is left unchanged,
\-1 is returned, and
.I errno 
is set to indicate the error.
.SH ERRORS
.TP
.B EINVAL
.I sem
is not a valid semaphore.
.SH CONFORMING TO
POSIX.1-2001.
.SH NOTES
.BR sem_post ()
is async-signal-safe:
it may be safely called within a signal handler.
.SH "SEE ALSO"
.BR sem_getvalue (3),
.BR sem_wait (3),
.BR sem_overview (7)
