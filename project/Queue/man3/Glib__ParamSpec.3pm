.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Glib::ParamSpec 3pm"
.TH Glib::ParamSpec 3pm "2007-03-05" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Glib::ParamSpec
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Glib::ParamSpec encapsulates the metadata required to specify parameters.
You will see these most often when creating new Glib::Object types; see
\&\f(CW\*(C`Glib::Type\->register\*(C'\fR and Glib::Object::Subclass.
.PP
Parameter specifications allow you to provide limits for validation as 
well as nicknames and blurbs to document the parameters.  Blurbs show up
in reference documentation such as this page or the gtk+ C \s-1API\s0 reference;
i'm not really sure where the nicknames get used.  The Perl bindings for
the most part ignore the difference between dashes and underscores in
the paramspec names, which typically find use as the actual keys for 
object parameters.
.PP
It's worth noting that Glib offers various sizes of integer and floating
point values, while Perl really only deals with full integers and double
precision floating point values.  The size distinction is important for
the underlying C libraries.
.SH "METHODS"
.IX Header "METHODS"
.ie n .Sh "paramspec = Glib::ParamSpec\->\fB\s-1IV\s0\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fB\s-1IV\s0\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->IV ($name, $nick, $blurb, $minimum, $maximum, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $minimum (integer)" 4
.el .IP "* \f(CW$minimum\fR (integer)" 4
.IX Item "$minimum (integer)"
.ie n .IP "* $maximum (integer)" 4
.el .IP "* \f(CW$maximum\fR (integer)" 4
.IX Item "$maximum (integer)"
.ie n .IP "* $default_value (integer)" 4
.el .IP "* \f(CW$default_value\fR (integer)" 4
.IX Item "$default_value (integer)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fB\s-1UV\s0\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fB\s-1UV\s0\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->UV ($name, $nick, $blurb, $minimum, $maximum, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $minimum (unsigned)" 4
.el .IP "* \f(CW$minimum\fR (unsigned)" 4
.IX Item "$minimum (unsigned)"
.ie n .IP "* $maximum (unsigned)" 4
.el .IP "* \f(CW$maximum\fR (unsigned)" 4
.IX Item "$maximum (unsigned)"
.ie n .IP "* $default_value (unsigned)" 4
.el .IP "* \f(CW$default_value\fR (unsigned)" 4
.IX Item "$default_value (unsigned)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "string = $pspec\fP\->\fBget_blurb"
.el .Sh "string = \f(CW$pspec\fP\->\fBget_blurb\fP"
.IX Subsection "string = $pspec->get_blurb"
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBboolean\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBboolean\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->boolean ($name, $nick, $blurb, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $default_value (boolean)" 4
.el .IP "* \f(CW$default_value\fR (boolean)" 4
.IX Item "$default_value (boolean)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBboxed\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$package\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBboxed\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$package\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->boxed ($name, $nick, $blurb, $package, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $package (string) name of the class, derived from Glib::Boxed, of the objects this property will hold." 4
.el .IP "* \f(CW$package\fR (string) name of the class, derived from Glib::Boxed, of the objects this property will hold." 4
.IX Item "$package (string) name of the class, derived from Glib::Boxed, of the objects this property will hold."
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBchar\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBchar\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->char ($name, $nick, $blurb, $minimum, $maximum, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $minimum (integer)" 4
.el .IP "* \f(CW$minimum\fR (integer)" 4
.IX Item "$minimum (integer)"
.ie n .IP "* $maximum (integer)" 4
.el .IP "* \f(CW$maximum\fR (integer)" 4
.IX Item "$maximum (integer)"
.ie n .IP "* $default_value (integer)" 4
.el .IP "* \f(CW$default_value\fR (integer)" 4
.IX Item "$default_value (integer)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBdouble\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBdouble\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->double ($name, $nick, $blurb, $minimum, $maximum, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $minimum (double)" 4
.el .IP "* \f(CW$minimum\fR (double)" 4
.IX Item "$minimum (double)"
.ie n .IP "* $maximum (double)" 4
.el .IP "* \f(CW$maximum\fR (double)" 4
.IX Item "$maximum (double)"
.ie n .IP "* $default_value (double)" 4
.el .IP "* \f(CW$default_value\fR (double)" 4
.IX Item "$default_value (double)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBenum\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$enum_type\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBenum\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$enum_type\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->enum ($name, $nick, $blurb, $enum_type, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $enum_type (string)" 4
.el .IP "* \f(CW$enum_type\fR (string)" 4
.IX Item "$enum_type (string)"
.ie n .IP "* $default_value (scalar)" 4
.el .IP "* \f(CW$default_value\fR (scalar)" 4
.IX Item "$default_value (scalar)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBflags\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$flags_type\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBflags\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$flags_type\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->flags ($name, $nick, $blurb, $flags_type, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $flags_type (string)" 4
.el .IP "* \f(CW$flags_type\fR (string)" 4
.IX Item "$flags_type (string)"
.ie n .IP "* $default_value (scalar)" 4
.el .IP "* \f(CW$default_value\fR (scalar)" 4
.IX Item "$default_value (scalar)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramflags = $pspec\fP\->\fBget_flags"
.el .Sh "paramflags = \f(CW$pspec\fP\->\fBget_flags\fP"
.IX Subsection "paramflags = $pspec->get_flags"
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBfloat\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBfloat\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->float ($name, $nick, $blurb, $minimum, $maximum, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $minimum (double)" 4
.el .IP "* \f(CW$minimum\fR (double)" 4
.IX Item "$minimum (double)"
.ie n .IP "* $maximum (double)" 4
.el .IP "* \f(CW$maximum\fR (double)" 4
.IX Item "$maximum (double)"
.ie n .IP "* $default_value (double)" 4
.el .IP "* \f(CW$default_value\fR (double)" 4
.IX Item "$default_value (double)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBint\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBint\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->int ($name, $nick, $blurb, $minimum, $maximum, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $minimum (integer)" 4
.el .IP "* \f(CW$minimum\fR (integer)" 4
.IX Item "$minimum (integer)"
.ie n .IP "* $maximum (integer)" 4
.el .IP "* \f(CW$maximum\fR (integer)" 4
.IX Item "$maximum (integer)"
.ie n .IP "* $default_value (integer)" 4
.el .IP "* \f(CW$default_value\fR (integer)" 4
.IX Item "$default_value (integer)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBint64\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBint64\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->int64 ($name, $nick, $blurb, $minimum, $maximum, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $minimum (Glib::Int64)" 4
.el .IP "* \f(CW$minimum\fR (Glib::Int64)" 4
.IX Item "$minimum (Glib::Int64)"
.ie n .IP "* $maximum (Glib::Int64)" 4
.el .IP "* \f(CW$maximum\fR (Glib::Int64)" 4
.IX Item "$maximum (Glib::Int64)"
.ie n .IP "* $default_value (Glib::Int64)" 4
.el .IP "* \f(CW$default_value\fR (Glib::Int64)" 4
.IX Item "$default_value (Glib::Int64)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBlong\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBlong\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->long ($name, $nick, $blurb, $minimum, $maximum, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $minimum (integer)" 4
.el .IP "* \f(CW$minimum\fR (integer)" 4
.IX Item "$minimum (integer)"
.ie n .IP "* $maximum (integer)" 4
.el .IP "* \f(CW$maximum\fR (integer)" 4
.IX Item "$maximum (integer)"
.ie n .IP "* $default_value (integer)" 4
.el .IP "* \f(CW$default_value\fR (integer)" 4
.IX Item "$default_value (integer)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "string = $paramspec\fP\->\fBget_name"
.el .Sh "string = \f(CW$paramspec\fP\->\fBget_name\fP"
.IX Subsection "string = $paramspec->get_name"
.RS 4
Dashes in the name are converted to underscores.
.RE
.ie n .Sh "string = $pspec\fP\->\fBget_nick"
.el .Sh "string = \f(CW$pspec\fP\->\fBget_nick\fP"
.IX Subsection "string = $pspec->get_nick"
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBobject\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$package\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBobject\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$package\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->object ($name, $nick, $blurb, $package, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $package (string) name of the class, derived from Glib::Object, of the objects this property will hold." 4
.el .IP "* \f(CW$package\fR (string) name of the class, derived from Glib::Object, of the objects this property will hold." 4
.IX Item "$package (string) name of the class, derived from Glib::Object, of the objects this property will hold."
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "string = $pspec\fP\->\fBget_owner_type"
.el .Sh "string = \f(CW$pspec\fP\->\fBget_owner_type\fP"
.IX Subsection "string = $pspec->get_owner_type"
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBparam_spec\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$package\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBparam_spec\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$package\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->param_spec ($name, $nick, $blurb, $package, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $package (string) name of the class, derived from Glib::ParamSpec, of the objects this property will hold." 4
.el .IP "* \f(CW$package\fR (string) name of the class, derived from Glib::ParamSpec, of the objects this property will hold." 4
.IX Item "$package (string) name of the class, derived from Glib::ParamSpec, of the objects this property will hold."
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBscalar\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBscalar\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->scalar ($name, $nick, $blurb, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.PD
.Sp
ParamSpec to be used for any generic perl scalar, including references to
complex objects.
.RE
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBstring\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBstring\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->string ($name, $nick, $blurb, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $default_value (string)" 4
.el .IP "* \f(CW$default_value\fR (string)" 4
.IX Item "$default_value (string)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBuchar\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBuchar\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->uchar ($name, $nick, $blurb, $minimum, $maximum, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $minimum (unsigned)" 4
.el .IP "* \f(CW$minimum\fR (unsigned)" 4
.IX Item "$minimum (unsigned)"
.ie n .IP "* $maximum (unsigned)" 4
.el .IP "* \f(CW$maximum\fR (unsigned)" 4
.IX Item "$maximum (unsigned)"
.ie n .IP "* $default_value (unsigned)" 4
.el .IP "* \f(CW$default_value\fR (unsigned)" 4
.IX Item "$default_value (unsigned)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBuint\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBuint\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->uint ($name, $nick, $blurb, $minimum, $maximum, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $minimum (unsigned)" 4
.el .IP "* \f(CW$minimum\fR (unsigned)" 4
.IX Item "$minimum (unsigned)"
.ie n .IP "* $maximum (unsigned)" 4
.el .IP "* \f(CW$maximum\fR (unsigned)" 4
.IX Item "$maximum (unsigned)"
.ie n .IP "* $default_value (unsigned)" 4
.el .IP "* \f(CW$default_value\fR (unsigned)" 4
.IX Item "$default_value (unsigned)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBuint64\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBuint64\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->uint64 ($name, $nick, $blurb, $minimum, $maximum, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $minimum (Glib::UInt64)" 4
.el .IP "* \f(CW$minimum\fR (Glib::UInt64)" 4
.IX Item "$minimum (Glib::UInt64)"
.ie n .IP "* $maximum (Glib::UInt64)" 4
.el .IP "* \f(CW$maximum\fR (Glib::UInt64)" 4
.IX Item "$maximum (Glib::UInt64)"
.ie n .IP "* $default_value (Glib::UInt64)" 4
.el .IP "* \f(CW$default_value\fR (Glib::UInt64)" 4
.IX Item "$default_value (Glib::UInt64)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBulong\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBulong\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$minimum\fP, \f(CW$maximum\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->ulong ($name, $nick, $blurb, $minimum, $maximum, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $minimum (unsigned)" 4
.el .IP "* \f(CW$minimum\fR (unsigned)" 4
.IX Item "$minimum (unsigned)"
.ie n .IP "* $maximum (unsigned)" 4
.el .IP "* \f(CW$maximum\fR (unsigned)" 4
.IX Item "$maximum (unsigned)"
.ie n .IP "* $default_value (unsigned)" 4
.el .IP "* \f(CW$default_value\fR (unsigned)" 4
.IX Item "$default_value (unsigned)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "paramspec = Glib::ParamSpec\->\fBunichar\fP ($name, $nick\fP, \f(CW$blurb\fP, \f(CW$default_value\fP, \f(CW$flags)"
.el .Sh "paramspec = Glib::ParamSpec\->\fBunichar\fP ($name, \f(CW$nick\fP, \f(CW$blurb\fP, \f(CW$default_value\fP, \f(CW$flags\fP)"
.IX Subsection "paramspec = Glib::ParamSpec->unichar ($name, $nick, $blurb, $default_value, $flags)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $nick (string)" 4
.el .IP "* \f(CW$nick\fR (string)" 4
.IX Item "$nick (string)"
.ie n .IP "* $blurb (string)" 4
.el .IP "* \f(CW$blurb\fR (string)" 4
.IX Item "$blurb (string)"
.ie n .IP "* $default_value (character)" 4
.el .IP "* \f(CW$default_value\fR (character)" 4
.IX Item "$default_value (character)"
.ie n .IP "* $flags (Glib::ParamFlags)" 4
.el .IP "* \f(CW$flags\fR (Glib::ParamFlags)" 4
.IX Item "$flags (Glib::ParamFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "string = $pspec\fP\->\fBget_value_type"
.el .Sh "string = \f(CW$pspec\fP\->\fBget_value_type\fP"
.IX Subsection "string = $pspec->get_value_type"
.SH "ENUMS AND FLAGS"
.IX Header "ENUMS AND FLAGS"
.Sh "flags Glib::ParamFlags"
.IX Subsection "flags Glib::ParamFlags"
.IP "* 'readable' / 'G_PARAM_READABLE'" 4
.IX Item "'readable' / 'G_PARAM_READABLE'"
.PD 0
.IP "* 'writable' / 'G_PARAM_WRITABLE'" 4
.IX Item "'writable' / 'G_PARAM_WRITABLE'"
.IP "* 'construct' / 'G_PARAM_CONSTRUCT'" 4
.IX Item "'construct' / 'G_PARAM_CONSTRUCT'"
.IP "* 'construct\-only' / 'G_PARAM_CONSTRUCT_ONLY'" 4
.IX Item "'construct-only' / 'G_PARAM_CONSTRUCT_ONLY'"
.IP "* 'lax\-validation' / 'G_PARAM_LAX_VALIDATION'" 4
.IX Item "'lax-validation' / 'G_PARAM_LAX_VALIDATION'"
.IP "* 'private' / 'G_PARAM_PRIVATE'" 4
.IX Item "'private' / 'G_PARAM_PRIVATE'"
.PD
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Glib
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2003\-2006 by the gtk2\-perl team.
.PP
This software is licensed under the \s-1LGPL\s0.  See Glib for a full notice.
