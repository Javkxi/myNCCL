.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.3
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Gnome2::Client 3pm"
.TH Gnome2::Client 3pm "2006-06-19" "perl v5.8.7" "User Contributed Perl Documentation"
.SH "NAME"
Gnome2::Client
.SH "HIERARCHY"
.IX Header "HIERARCHY"
.Vb 4
\&  Glib::Object
\&  +\-\-\-\-Glib::Object::_Unregistered::GInitiallyUnowned
\&       +\-\-\-\-Gtk2::Object
\&            +\-\-\-\-Gnome2::Client
.Ve
.SH "METHODS"
.IX Header "METHODS"
.Sh "client = Gnome2::Client\->\fBnew\fP"
.IX Subsection "client = Gnome2::Client->new"
.Sh "client = Gnome2::Client\->\fBnew_without_connection\fP"
.IX Subsection "client = Gnome2::Client->new_without_connection"
.Sh "$client\->\fBadd_static_arg\fP (...)"
.IX Subsection "$client->add_static_arg (...)"
.RS 4
.IP "* ... (list)" 4
.IX Item "... (list)"
.RE
.RS 4
.RE
.Sh "$client\->\fBset_clone_command\fP (...)"
.IX Subsection "$client->set_clone_command (...)"
.RS 4
.PD 0
.IP "* ... (list)" 4
.IX Item "... (list)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "string = $client\fP\->\fBget_config_prefix"
.el .Sh "string = \f(CW$client\fP\->\fBget_config_prefix\fP"
.IX Subsection "string = $client->get_config_prefix"
.Sh "$client\->\fBconnect\fP"
.IX Subsection "$client->connect"
.ie n .Sh "boolean = $client\fP\->\fBconnected"
.el .Sh "boolean = \f(CW$client\fP\->\fBconnected\fP"
.IX Subsection "boolean = $client->connected"
.Sh "$client\->\fBset_current_directory\fP ($dir)"
.IX Subsection "$client->set_current_directory ($dir)"
.RS 4
.ie n .IP "* $dir (string)" 4
.el .IP "* \f(CW$dir\fR (string)" 4
.IX Item "$dir (string)"
.RE
.RS 4
.RE
.ie n .Sh "string = $client\fP\->\fBget_desktop_id"
.el .Sh "string = \f(CW$client\fP\->\fBget_desktop_id\fP"
.IX Subsection "string = $client->get_desktop_id"
.Sh "$client\->\fBset_discard_command\fP (...)"
.IX Subsection "$client->set_discard_command (...)"
.RS 4
.PD 0
.IP "* ... (list)" 4
.IX Item "... (list)"
.RE
.RS 4
.RE
.PD
.Sh "$client\->\fBdisconnect\fP"
.IX Subsection "$client->disconnect"
.ie n .Sh "$client\->\fBset_environment\fP ($name, $value)"
.el .Sh "$client\->\fBset_environment\fP ($name, \f(CW$value\fP)"
.IX Subsection "$client->set_environment ($name, $value)"
.RS 4
.ie n .IP "* $name (string)" 4
.el .IP "* \f(CW$name\fR (string)" 4
.IX Item "$name (string)"
.PD 0
.ie n .IP "* $value (string)" 4
.el .IP "* \f(CW$value\fR (string)" 4
.IX Item "$value (string)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "clientflags = $client\fP\->\fBget_flags"
.el .Sh "clientflags = \f(CW$client\fP\->\fBget_flags\fP"
.IX Subsection "clientflags = $client->get_flags"
.Sh "$client\->\fBflush\fP"
.IX Subsection "$client->flush"
.ie n .Sh "string = $client\fP\->\fBget_global_config_prefix"
.el .Sh "string = \f(CW$client\fP\->\fBget_global_config_prefix\fP"
.IX Subsection "string = $client->get_global_config_prefix"
.Sh "$client\->\fBset_global_config_prefix\fP ($prefix)"
.IX Subsection "$client->set_global_config_prefix ($prefix)"
.RS 4
.ie n .IP "* $prefix (string)" 4
.el .IP "* \f(CW$prefix\fR (string)" 4
.IX Item "$prefix (string)"
.RE
.RS 4
.RE
.ie n .Sh "string = $client\fP\->\fBget_id"
.el .Sh "string = \f(CW$client\fP\->\fBget_id\fP"
.IX Subsection "string = $client->get_id"
.ie n .Sh "Gnome2::Client\->\fBinteraction_key_return\fP ($key, $cancel_shutdown)"
.el .Sh "Gnome2::Client\->\fBinteraction_key_return\fP ($key, \f(CW$cancel_shutdown\fP)"
.IX Subsection "Gnome2::Client->interaction_key_return ($key, $cancel_shutdown)"
.RS 4
.PD 0
.ie n .IP "* $key (integer)" 4
.el .IP "* \f(CW$key\fR (integer)" 4
.IX Item "$key (integer)"
.ie n .IP "* $cancel_shutdown (boolean)" 4
.el .IP "* \f(CW$cancel_shutdown\fR (boolean)" 4
.IX Item "$cancel_shutdown (boolean)"
.RE
.RS 4
.RE
.PD
.Sh "client = Gnome2::Client\->\fBmaster\fP"
.IX Subsection "client = Gnome2::Client->master"
.ie n .Sh "string = $client\fP\->\fBget_previous_id"
.el .Sh "string = \f(CW$client\fP\->\fBget_previous_id\fP"
.IX Subsection "string = $client->get_previous_id"
.Sh "$client\->\fBset_priority\fP ($priority)"
.IX Subsection "$client->set_priority ($priority)"
.RS 4
.ie n .IP "* $priority (integer)" 4
.el .IP "* \f(CW$priority\fR (integer)" 4
.IX Item "$priority (integer)"
.RE
.RS 4
.RE
.ie n .Sh "$client\->\fBrequest_interaction\fP ($dialog_type, $function\fP, \f(CW$data=undef)"
.el .Sh "$client\->\fBrequest_interaction\fP ($dialog_type, \f(CW$function\fP, \f(CW$data\fP=undef)"
.IX Subsection "$client->request_interaction ($dialog_type, $function, $data=undef)"
.RS 4
.PD 0
.ie n .IP "* $dialog_type (Gnome2::DialogType)" 4
.el .IP "* \f(CW$dialog_type\fR (Gnome2::DialogType)" 4
.IX Item "$dialog_type (Gnome2::DialogType)"
.ie n .IP "* $function (scalar)" 4
.el .IP "* \f(CW$function\fR (scalar)" 4
.IX Item "$function (scalar)"
.ie n .IP "* $data (scalar)" 4
.el .IP "* \f(CW$data\fR (scalar)" 4
.IX Item "$data (scalar)"
.RE
.RS 4
.RE
.PD
.Sh "$client\->\fBrequest_phase_2\fP"
.IX Subsection "$client->request_phase_2"
.ie n .Sh "$client\->\fBrequest_save\fP ($save_style, $shutdown\fP, \f(CW$interact_style\fP, \f(CW$fast\fP, \f(CW$global)"
.el .Sh "$client\->\fBrequest_save\fP ($save_style, \f(CW$shutdown\fP, \f(CW$interact_style\fP, \f(CW$fast\fP, \f(CW$global\fP)"
.IX Subsection "$client->request_save ($save_style, $shutdown, $interact_style, $fast, $global)"
.RS 4
.ie n .IP "* $save_style (Gnome2::SaveStyle)" 4
.el .IP "* \f(CW$save_style\fR (Gnome2::SaveStyle)" 4
.IX Item "$save_style (Gnome2::SaveStyle)"
.PD 0
.ie n .IP "* $shutdown (boolean)" 4
.el .IP "* \f(CW$shutdown\fR (boolean)" 4
.IX Item "$shutdown (boolean)"
.ie n .IP "* $interact_style (Gnome2::InteractStyle)" 4
.el .IP "* \f(CW$interact_style\fR (Gnome2::InteractStyle)" 4
.IX Item "$interact_style (Gnome2::InteractStyle)"
.ie n .IP "* $fast (boolean)" 4
.el .IP "* \f(CW$fast\fR (boolean)" 4
.IX Item "$fast (boolean)"
.ie n .IP "* $global (boolean)" 4
.el .IP "* \f(CW$global\fR (boolean)" 4
.IX Item "$global (boolean)"
.RE
.RS 4
.RE
.PD
.Sh "$client\->\fBset_resign_command\fP (...)"
.IX Subsection "$client->set_resign_command (...)"
.RS 4
.IP "* ... (list)" 4
.IX Item "... (list)"
.RE
.RS 4
.RE
.Sh "$client\->\fBset_restart_command\fP (...)"
.IX Subsection "$client->set_restart_command (...)"
.RS 4
.PD 0
.IP "* ... (list)" 4
.IX Item "... (list)"
.RE
.RS 4
.RE
.PD
.Sh "$client\->\fBset_restart_style\fP ($style)"
.IX Subsection "$client->set_restart_style ($style)"
.RS 4
.ie n .IP "* $style (Gnome2::RestartStyle)" 4
.el .IP "* \f(CW$style\fR (Gnome2::RestartStyle)" 4
.IX Item "$style (Gnome2::RestartStyle)"
.RE
.RS 4
.RE
.Sh "$client\->\fBsave_any_dialog\fP ($dialog)"
.IX Subsection "$client->save_any_dialog ($dialog)"
.RS 4
.PD 0
.ie n .IP "* $dialog (Gtk2::Dialog)" 4
.el .IP "* \f(CW$dialog\fR (Gtk2::Dialog)" 4
.IX Item "$dialog (Gtk2::Dialog)"
.RE
.RS 4
.RE
.PD
.Sh "$client\->\fBsave_error_dialog\fP ($dialog)"
.IX Subsection "$client->save_error_dialog ($dialog)"
.RS 4
.ie n .IP "* $dialog (Gtk2::Dialog)" 4
.el .IP "* \f(CW$dialog\fR (Gtk2::Dialog)" 4
.IX Item "$dialog (Gtk2::Dialog)"
.RE
.RS 4
.RE
.Sh "$client\->\fBset_shutdown_command\fP (...)"
.IX Subsection "$client->set_shutdown_command (...)"
.RS 4
.PD 0
.IP "* ... (list)" 4
.IX Item "... (list)"
.RE
.RS 4
.RE
.PD
.SH "SIGNALS"
.IX Header "SIGNALS"
.IP "boolean = \fBsave-yourself\fR (Gnome2::Client, integer, Gnome2::SaveStyle, boolean, Gnome2::InteractStyle, boolean)" 4
.IX Item "boolean = save-yourself (Gnome2::Client, integer, Gnome2::SaveStyle, boolean, Gnome2::InteractStyle, boolean)"
.PD 0
.IP "\fBdie\fR (Gnome2::Client)" 4
.IX Item "die (Gnome2::Client)"
.IP "\fBsave-complete\fR (Gnome2::Client)" 4
.IX Item "save-complete (Gnome2::Client)"
.IP "\fBshutdown-cancelled\fR (Gnome2::Client)" 4
.IX Item "shutdown-cancelled (Gnome2::Client)"
.IP "\fBconnect\fR (Gnome2::Client, boolean)" 4
.IX Item "connect (Gnome2::Client, boolean)"
.IP "\fBdisconnect\fR (Gnome2::Client)" 4
.IX Item "disconnect (Gnome2::Client)"
.PD
.SH "ENUMS AND FLAGS"
.IX Header "ENUMS AND FLAGS"
.Sh "flags Gnome2::ClientFlags"
.IX Subsection "flags Gnome2::ClientFlags"
.IP "* 'is\-connected' / '\s-1GNOME_CLIENT_IS_CONNECTED\s0'" 4
.IX Item "'is-connected' / 'GNOME_CLIENT_IS_CONNECTED'"
.PD 0
.IP "* 'restarted' / '\s-1GNOME_CLIENT_RESTARTED\s0'" 4
.IX Item "'restarted' / 'GNOME_CLIENT_RESTARTED'"
.IP "* 'restored' / '\s-1GNOME_CLIENT_RESTORED\s0'" 4
.IX Item "'restored' / 'GNOME_CLIENT_RESTORED'"
.PD
.Sh "enum Gnome2::DialogType"
.IX Subsection "enum Gnome2::DialogType"
.IP "* 'error' / '\s-1GNOME_DIALOG_ERROR\s0'" 4
.IX Item "'error' / 'GNOME_DIALOG_ERROR'"
.PD 0
.IP "* 'normal' / '\s-1GNOME_DIALOG_NORMAL\s0'" 4
.IX Item "'normal' / 'GNOME_DIALOG_NORMAL'"
.PD
.Sh "enum Gnome2::InteractStyle"
.IX Subsection "enum Gnome2::InteractStyle"
.IP "* 'none' / '\s-1GNOME_INTERACT_NONE\s0'" 4
.IX Item "'none' / 'GNOME_INTERACT_NONE'"
.PD 0
.IP "* 'errors' / '\s-1GNOME_INTERACT_ERRORS\s0'" 4
.IX Item "'errors' / 'GNOME_INTERACT_ERRORS'"
.IP "* 'any' / '\s-1GNOME_INTERACT_ANY\s0'" 4
.IX Item "'any' / 'GNOME_INTERACT_ANY'"
.PD
.Sh "enum Gnome2::RestartStyle"
.IX Subsection "enum Gnome2::RestartStyle"
.IP "* 'if\-running' / '\s-1GNOME_RESTART_IF_RUNNING\s0'" 4
.IX Item "'if-running' / 'GNOME_RESTART_IF_RUNNING'"
.PD 0
.IP "* 'anyway' / '\s-1GNOME_RESTART_ANYWAY\s0'" 4
.IX Item "'anyway' / 'GNOME_RESTART_ANYWAY'"
.IP "* 'immediately' / '\s-1GNOME_RESTART_IMMEDIATELY\s0'" 4
.IX Item "'immediately' / 'GNOME_RESTART_IMMEDIATELY'"
.IP "* 'never' / '\s-1GNOME_RESTART_NEVER\s0'" 4
.IX Item "'never' / 'GNOME_RESTART_NEVER'"
.PD
.Sh "enum Gnome2::SaveStyle"
.IX Subsection "enum Gnome2::SaveStyle"
.IP "* 'global' / '\s-1GNOME_SAVE_GLOBAL\s0'" 4
.IX Item "'global' / 'GNOME_SAVE_GLOBAL'"
.PD 0
.IP "* 'local' / '\s-1GNOME_SAVE_LOCAL\s0'" 4
.IX Item "'local' / 'GNOME_SAVE_LOCAL'"
.IP "* 'both' / '\s-1GNOME_SAVE_BOTH\s0'" 4
.IX Item "'both' / 'GNOME_SAVE_BOTH'"
.PD
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Gnome2, Glib::Object, Glib::Object::_Unregistered::GInitiallyUnowned, Gtk2::Object
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2003\-2004 by the gtk2\-perl team.
.PP
This software is licensed under the \s-1LGPL\s0.  See Gnome2 for a full notice.
