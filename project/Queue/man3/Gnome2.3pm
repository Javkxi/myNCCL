.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.3
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Gnome2 3pm"
.TH Gnome2 3pm "2006-06-19" "perl v5.8.7" "User Contributed Perl Documentation"
.SH "NAME"
Gnome2 \- Perl interface to the 2.x series of the GNOME libraries
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 5
\&  use Gnome2;
\&  Gnome2::Program\->init ($appname, $appversion);
\&  my $app = Gnome2::App\->new ($appname);
\&  $app\->show;
\&  Gtk2\->main;
.Ve
.SH "ABSTRACT"
.IX Header "ABSTRACT"
Perl bindings to the 2.x series of the \s-1GNOME\s0 libraries.  This module allows you
to interface with the libgnome and libgnomeui libraries to create \s-1GNOME\s0
applications.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Since this module tries to stick very closely to the C \s-1API\s0, the documentation
found at
.PP
.Vb 1
\&  http://developer.gnome.org/doc/API/2.0/libgnome/index.html
.Ve
.PP
and
.PP
.Vb 1
\&  http://developer.gnome.org/doc/API/2.0/libgnomeui/index.html
.Ve
.PP
is the canonical reference.
.PP
In addition to that, there's also the automatically generated \s-1API\s0
documentation: Gnome2::index(3pm).
.PP
The mapping described in Gtk2::api(3pm) also applies to this module.
.PP
To discuss this module, ask questions and flame/praise the authors, join
gtk\-perl\-list@gnome.org at lists.gnome.org.
.SH "MISSING METHODS"
.IX Header "MISSING METHODS"
.IP "gnome_app_fill_menu_with_data" 4
.IX Item "gnome_app_fill_menu_with_data"
.PD 0
.IP "gnome_app_fill_menu_custom" 4
.IX Item "gnome_app_fill_menu_custom"
.PD
Use gnome_app_fill_menu instead.
.IP "gnome_app_fill_toolbar_with_data" 4
.IX Item "gnome_app_fill_toolbar_with_data"
.PD 0
.IP "gnome_app_fill_toolbar_custom" 4
.IX Item "gnome_app_fill_toolbar_custom"
.PD
Use gnome_app_fill_toolbar instead.
.IP "gnome_app_create_menus_interp" 4
.IX Item "gnome_app_create_menus_interp"
.PD 0
.IP "gnome_app_create_menus_with_data" 4
.IX Item "gnome_app_create_menus_with_data"
.IP "gnome_app_create_menus_custom" 4
.IX Item "gnome_app_create_menus_custom"
.PD
Use gnome_app_create_menus instead.
.IP "gnome_app_create_toolbar_interp" 4
.IX Item "gnome_app_create_toolbar_interp"
.PD 0
.IP "gnome_app_create_toolbar_with_data" 4
.IX Item "gnome_app_create_toolbar_with_data"
.IP "gnome_app_create_toolbar_custom" 4
.IX Item "gnome_app_create_toolbar_custom"
.PD
Use gnome_app_create_toolbar instead.
.IP "gnome_app_insert_menus_custom" 4
.IX Item "gnome_app_insert_menus_custom"
.PD 0
.IP "gnome_app_insert_menus_with_data" 4
.IX Item "gnome_app_insert_menus_with_data"
.IP "gnome_app_insert_menus_interp" 4
.IX Item "gnome_app_insert_menus_interp"
.PD
Use gnome_app_insert_menus instead.
.SH "RENAMED METHODS"
.IX Header "RENAMED METHODS"
.IP "gnome_program_get" 4
.IX Item "gnome_program_get"
Gnome2::Program\->get has been renamed to \->get_program to avoid a clash with
GObject\->get.
.IP "gnome_popup_menu_attach" 4
.IX Item "gnome_popup_menu_attach"
Gtk2::Menu\->attach has been renamed to \->attach_to to avoid a clash with
gtk_menu_attach.
.IP "gnome_popup_menu_append" 4
.IX Item "gnome_popup_menu_append"
Gtk2::Menu\->append has been renamed to \->append_from to avoid a clash with
gtk_menu_shell_append.
.SH "DIFFERENT CALL SIGNATURES OR SEMANTICS"
.IX Header "DIFFERENT CALL SIGNATURES OR SEMANTICS"
.IP "gnome_client_set_restart_command" 4
.IX Item "gnome_client_set_restart_command"
.PD 0
.IP "gnome_client_set_discard_command" 4
.IX Item "gnome_client_set_discard_command"
.IP "gnome_client_set_resign_command" 4
.IX Item "gnome_client_set_resign_command"
.IP "gnome_client_set_shutdown_command" 4
.IX Item "gnome_client_set_shutdown_command"
.IP "gnome_client_set_clone_command" 4
.IX Item "gnome_client_set_clone_command"
.PD
Instead of argc and argv you simply pass in a list.
.IP "gnome_program_init" 4
.IX Item "gnome_program_init"
Gnome2::Program\->init automagically fills argc and argv so just omit these
parameters.
.RS 4
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.RS 4
perl(1), Gnome2::index(3pm), Glib(3pm), Gtk2(3pm),
Gtk2::api(3pm).
.SH "AUTHOR"
.IX Header "AUTHOR"
muppet <scott at asofyet dot org> did the initial stuff.
.Sp
Torsten Schoenfeld <kaffeetisch at gmx dot de> took over between 0.34
and 0.36, and implemented lots of tests and missing functionality, and
corrected several of muppet's mistakes.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2003\-2006 by the gtk2\-perl team (see the file \s-1AUTHORS\s0)
.Sp
This library is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 2.1 of the License, or (at your option) any
later version.
.Sp
This library is distributed in the hope that it will be useful, but \s-1WITHOUT\s0 \s-1ANY\s0
\&\s-1WARRANTY\s0; without even the implied warranty of \s-1MERCHANTABILITY\s0 or \s-1FITNESS\s0 \s-1FOR\s0 A
\&\s-1PARTICULAR\s0 \s-1PURPOSE\s0.  See the \s-1GNU\s0 Lesser General Public License for more
details.
.Sp
You should have received a copy of the \s-1GNU\s0 Lesser General Public License along
with this library; if not, write to the Free Software Foundation, Inc.,
59 Temple Place, Suite 330, Boston, \s-1MA\s0  02111\-1307  \s-1USA\s0
