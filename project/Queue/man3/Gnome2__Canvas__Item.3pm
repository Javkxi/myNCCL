.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Gnome2::Canvas::Item 3pm"
.TH Gnome2::Canvas::Item 3pm "2007-02-26" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Gnome2::Canvas::Item
.SH "HIERARCHY"
.IX Header "HIERARCHY"
.Vb 4
\&  Glib::Object
\&  +\-\-\-\-Glib::InitiallyUnowned
\&       +\-\-\-\-Gtk2::Object
\&            +\-\-\-\-Gnome2::Canvas::Item
.Ve
.SH "METHODS"
.IX Header "METHODS"
.ie n .Sh "item = Gnome2::Canvas::Item\->\fBnew\fP ($parent, $object_class, ...)"
.el .Sh "item = Gnome2::Canvas::Item\->\fBnew\fP ($parent, \f(CW$object_class\fP, ...)"
.IX Subsection "item = Gnome2::Canvas::Item->new ($parent, $object_class, ...)"
.RS 4
.ie n .IP "* $parent (Gnome2::Canvas::Group)" 4
.el .IP "* \f(CW$parent\fR (Gnome2::Canvas::Group)" 4
.IX Item "$parent (Gnome2::Canvas::Group)"
.PD 0
.ie n .IP "* $object_class (string)" 4
.el .IP "* \f(CW$object_class\fR (string)" 4
.IX Item "$object_class (string)"
.IP "* ... (list) property name => value pairs" 4
.IX Item "... (list) property name => value pairs"
.RE
.RS 4
.PD
.Sp
Factory constructor for Gnome2::Canvas::Item subclasses.
.RE
.Sh "$item\->\fBaffine_absolute\fP ($affine)"
.IX Subsection "$item->affine_absolute ($affine)"
.RS 4
.ie n .IP "* $affine (arrayref) affine transformation matrix" 4
.el .IP "* \f(CW$affine\fR (arrayref) affine transformation matrix" 4
.IX Item "$affine (arrayref) affine transformation matrix"
.RE
.RS 4
.Sp
Replaces \fI$item\fR's transformation matrix.
.RE
.Sh "$item\->\fBaffine_relative\fP ($affine)"
.IX Subsection "$item->affine_relative ($affine)"
.RS 4
.ie n .IP "* $affine (arrayref) affine transformation matrix" 4
.el .IP "* \f(CW$affine\fR (arrayref) affine transformation matrix" 4
.IX Item "$affine (arrayref) affine transformation matrix"
.RE
.RS 4
.Sp
Combines \fI$affine\fR with \fI$item\fR's current transformation.
.RE
.ie n .Sh "(x1, y1, x2, y2) = $item\fP\->\fBget_bounds"
.el .Sh "(x1, y1, x2, y2) = \f(CW$item\fP\->\fBget_bounds\fP"
.IX Subsection "(x1, y1, x2, y2) = $item->get_bounds"
.ie n .Sh "$canvas = $item\fP\->\fBcanvas"
.el .Sh "$canvas = \f(CW$item\fP\->\fBcanvas\fP"
.IX Subsection "$canvas = $item->canvas"
.RS 4
Fetch the Gnome2::Canvas to which \fI$item\fR is attached.
.RE
.ie n .Sh "grabstatus = $item\fP\->\fBgrab\fP ($event_mask, \f(CW$cursor\fP, \f(CW$etime=GDK_CURRENT_TIME)"
.el .Sh "grabstatus = \f(CW$item\fP\->\fBgrab\fP ($event_mask, \f(CW$cursor\fP, \f(CW$etime\fP=GDK_CURRENT_TIME)"
.IX Subsection "grabstatus = $item->grab ($event_mask, $cursor, $etime=GDK_CURRENT_TIME)"
.RS 4
.ie n .IP "* $event_mask (Gtk2::Gdk::EventMask)" 4
.el .IP "* \f(CW$event_mask\fR (Gtk2::Gdk::EventMask)" 4
.IX Item "$event_mask (Gtk2::Gdk::EventMask)"
.PD 0
.ie n .IP "* $cursor (Gtk2::Gdk::Cursor)" 4
.el .IP "* \f(CW$cursor\fR (Gtk2::Gdk::Cursor)" 4
.IX Item "$cursor (Gtk2::Gdk::Cursor)"
.ie n .IP "* $etime (unsigned)" 4
.el .IP "* \f(CW$etime\fR (unsigned)" 4
.IX Item "$etime (unsigned)"
.RE
.RS 4
.RE
.PD
.Sh "$item\->\fBgrab_focus\fP"
.IX Subsection "$item->grab_focus"
.Sh "$item\->\fBhide\fP"
.IX Subsection "$item->hide"
.ie n .Sh "$affine = $item\fP\->\fBi2c_affine"
.el .Sh "$affine = \f(CW$item\fP\->\fBi2c_affine\fP"
.IX Subsection "$affine = $item->i2c_affine"
.RS 4
.RE
.RS 4
.Sp
Fetch the affine transform that converts from item-relative coordinates to
canvas pixel coordinates.
.Sp
Note: This method was completely broken for all
\&\f(CW$Gnome2::Canvas::VERSION\fR < 1.002.
.RE
.ie n .Sh "(x, y) = $item\fP\->\fBi2w\fP ($x, \f(CW$y)"
.el .Sh "(x, y) = \f(CW$item\fP\->\fBi2w\fP ($x, \f(CW$y\fP)"
.IX Subsection "(x, y) = $item->i2w ($x, $y)"
.RS 4
.ie n .IP "* $x (double)" 4
.el .IP "* \f(CW$x\fR (double)" 4
.IX Item "$x (double)"
.PD 0
.ie n .IP "* $y (double)" 4
.el .IP "* \f(CW$y\fR (double)" 4
.IX Item "$y (double)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "$affine = $item\fP\->\fBi2w_affine"
.el .Sh "$affine = \f(CW$item\fP\->\fBi2w_affine\fP"
.IX Subsection "$affine = $item->i2w_affine"
.RS 4
.RE
.RS 4
.Sp
Fetch the affine transform that converts from item's coordinate system to
world coordinates.
.Sp
Note: This method was completely broken for all
\&\f(CW$Gnome2::Canvas::VERSION\fR < 1.002.
.RE
.Sh "$item\->\fBlower\fP ($positions)"
.IX Subsection "$item->lower ($positions)"
.RS 4
.ie n .IP "* $positions (integer)" 4
.el .IP "* \f(CW$positions\fR (integer)" 4
.IX Item "$positions (integer)"
.RE
.RS 4
.RE
.Sh "$item\->\fBlower_to_bottom\fP"
.IX Subsection "$item->lower_to_bottom"
.ie n .Sh "$item\->\fBmove\fP ($dx, $dy)"
.el .Sh "$item\->\fBmove\fP ($dx, \f(CW$dy\fP)"
.IX Subsection "$item->move ($dx, $dy)"
.RS 4
.PD 0
.ie n .IP "* $dx (double)" 4
.el .IP "* \f(CW$dx\fR (double)" 4
.IX Item "$dx (double)"
.ie n .IP "* $dy (double)" 4
.el .IP "* \f(CW$dy\fR (double)" 4
.IX Item "$dy (double)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "$canvasgroup = $item\fP\->\fBparent"
.el .Sh "$canvasgroup = \f(CW$item\fP\->\fBparent\fP"
.IX Subsection "$canvasgroup = $item->parent"
.RS 4
Fetch \fI$item\fR's parent group item.
.RE
.Sh "$item\->\fBraise\fP ($positions)"
.IX Subsection "$item->raise ($positions)"
.RS 4
.ie n .IP "* $positions (integer)" 4
.el .IP "* \f(CW$positions\fR (integer)" 4
.IX Item "$positions (integer)"
.RE
.RS 4
.RE
.Sh "$item\->\fBraise_to_top\fP"
.IX Subsection "$item->raise_to_top"
.Sh "$item\->\fBreparent\fP ($new_group)"
.IX Subsection "$item->reparent ($new_group)"
.RS 4
.PD 0
.ie n .IP "* $new_group (Gnome2::Canvas::Group)" 4
.el .IP "* \f(CW$new_group\fR (Gnome2::Canvas::Group)" 4
.IX Item "$new_group (Gnome2::Canvas::Group)"
.RE
.RS 4
.RE
.PD
.Sh "$item\->\fBrequest_update\fP"
.IX Subsection "$item->request_update"
.Sh "$item\->\fBreset_bounds\fP"
.IX Subsection "$item->reset_bounds"
.RS 4
Reset the bounding box of \fI$item\fR to an empty rectangle.
.RE
.Sh "$item\->\fBshow\fP"
.IX Subsection "$item->show"
.Sh "$item\->\fBungrab\fP ($etime=GDK_CURRENT_TIME)"
.IX Subsection "$item->ungrab ($etime=GDK_CURRENT_TIME)"
.RS 4
.ie n .IP "* $etime (unsigned)" 4
.el .IP "* \f(CW$etime\fR (unsigned)" 4
.IX Item "$etime (unsigned)"
.RE
.RS 4
.RE
.ie n .Sh "$item\->\fBupdate_bbox\fP ($x1, $y1\fP, \f(CW$x2\fP, \f(CW$y2)"
.el .Sh "$item\->\fBupdate_bbox\fP ($x1, \f(CW$y1\fP, \f(CW$x2\fP, \f(CW$y2\fP)"
.IX Subsection "$item->update_bbox ($x1, $y1, $x2, $y2)"
.RS 4
.PD 0
.ie n .IP "* $x1 (integer)" 4
.el .IP "* \f(CW$x1\fR (integer)" 4
.IX Item "$x1 (integer)"
.ie n .IP "* $y1 (integer)" 4
.el .IP "* \f(CW$y1\fR (integer)" 4
.IX Item "$y1 (integer)"
.ie n .IP "* $x2 (integer)" 4
.el .IP "* \f(CW$x2\fR (integer)" 4
.IX Item "$x2 (integer)"
.ie n .IP "* $y2 (integer)" 4
.el .IP "* \f(CW$y2\fR (integer)" 4
.IX Item "$y2 (integer)"
.RE
.RS 4
.PD
.Sp
Set \fI$item\fR's bounding box to a new rectangle, and request a full repaint.
.RE
.ie n .Sh "(x, y) = $item\fP\->\fBw2i\fP ($x, \f(CW$y)"
.el .Sh "(x, y) = \f(CW$item\fP\->\fBw2i\fP ($x, \f(CW$y\fP)"
.IX Subsection "(x, y) = $item->w2i ($x, $y)"
.RS 4
.ie n .IP "* $x (double)" 4
.el .IP "* \f(CW$x\fR (double)" 4
.IX Item "$x (double)"
.PD 0
.ie n .IP "* $y (double)" 4
.el .IP "* \f(CW$y\fR (double)" 4
.IX Item "$y (double)"
.RE
.RS 4
.RE
.PD
.SH "PROPERTIES"
.IX Header "PROPERTIES"
.IP "'parent' (Gnome2::Canvas::Item : readable / writable)" 4
.IX Item "'parent' (Gnome2::Canvas::Item : readable / writable)"
.SH "SIGNALS"
.IX Header "SIGNALS"
.PD 0
.IP "boolean = \fBevent\fR (Gnome2::Canvas::Item, Gtk2::Gdk::Event)" 4
.IX Item "boolean = event (Gnome2::Canvas::Item, Gtk2::Gdk::Event)"
.PD
.SH "ENUMS AND FLAGS"
.IX Header "ENUMS AND FLAGS"
.Sh "flags Gtk2::Gdk::EventMask"
.IX Subsection "flags Gtk2::Gdk::EventMask"
.IP "* 'exposure\-mask' / '\s-1GDK_EXPOSURE_MASK\s0'" 4
.IX Item "'exposure-mask' / 'GDK_EXPOSURE_MASK'"
.PD 0
.IP "* 'pointer\-motion\-mask' / '\s-1GDK_POINTER_MOTION_MASK\s0'" 4
.IX Item "'pointer-motion-mask' / 'GDK_POINTER_MOTION_MASK'"
.IP "* 'pointer\-motion\-hint\-mask' / '\s-1GDK_POINTER_MOTION_HINT_MASK\s0'" 4
.IX Item "'pointer-motion-hint-mask' / 'GDK_POINTER_MOTION_HINT_MASK'"
.IP "* 'button\-motion\-mask' / '\s-1GDK_BUTTON_MOTION_MASK\s0'" 4
.IX Item "'button-motion-mask' / 'GDK_BUTTON_MOTION_MASK'"
.IP "* 'button1\-motion\-mask' / '\s-1GDK_BUTTON1_MOTION_MASK\s0'" 4
.IX Item "'button1-motion-mask' / 'GDK_BUTTON1_MOTION_MASK'"
.IP "* 'button2\-motion\-mask' / '\s-1GDK_BUTTON2_MOTION_MASK\s0'" 4
.IX Item "'button2-motion-mask' / 'GDK_BUTTON2_MOTION_MASK'"
.IP "* 'button3\-motion\-mask' / '\s-1GDK_BUTTON3_MOTION_MASK\s0'" 4
.IX Item "'button3-motion-mask' / 'GDK_BUTTON3_MOTION_MASK'"
.IP "* 'button\-press\-mask' / '\s-1GDK_BUTTON_PRESS_MASK\s0'" 4
.IX Item "'button-press-mask' / 'GDK_BUTTON_PRESS_MASK'"
.IP "* 'button\-release\-mask' / '\s-1GDK_BUTTON_RELEASE_MASK\s0'" 4
.IX Item "'button-release-mask' / 'GDK_BUTTON_RELEASE_MASK'"
.IP "* 'key\-press\-mask' / '\s-1GDK_KEY_PRESS_MASK\s0'" 4
.IX Item "'key-press-mask' / 'GDK_KEY_PRESS_MASK'"
.IP "* 'key\-release\-mask' / '\s-1GDK_KEY_RELEASE_MASK\s0'" 4
.IX Item "'key-release-mask' / 'GDK_KEY_RELEASE_MASK'"
.IP "* 'enter\-notify\-mask' / '\s-1GDK_ENTER_NOTIFY_MASK\s0'" 4
.IX Item "'enter-notify-mask' / 'GDK_ENTER_NOTIFY_MASK'"
.IP "* 'leave\-notify\-mask' / '\s-1GDK_LEAVE_NOTIFY_MASK\s0'" 4
.IX Item "'leave-notify-mask' / 'GDK_LEAVE_NOTIFY_MASK'"
.IP "* 'focus\-change\-mask' / '\s-1GDK_FOCUS_CHANGE_MASK\s0'" 4
.IX Item "'focus-change-mask' / 'GDK_FOCUS_CHANGE_MASK'"
.IP "* 'structure\-mask' / '\s-1GDK_STRUCTURE_MASK\s0'" 4
.IX Item "'structure-mask' / 'GDK_STRUCTURE_MASK'"
.IP "* 'property\-change\-mask' / '\s-1GDK_PROPERTY_CHANGE_MASK\s0'" 4
.IX Item "'property-change-mask' / 'GDK_PROPERTY_CHANGE_MASK'"
.IP "* 'visibility\-notify\-mask' / '\s-1GDK_VISIBILITY_NOTIFY_MASK\s0'" 4
.IX Item "'visibility-notify-mask' / 'GDK_VISIBILITY_NOTIFY_MASK'"
.IP "* 'proximity\-in\-mask' / '\s-1GDK_PROXIMITY_IN_MASK\s0'" 4
.IX Item "'proximity-in-mask' / 'GDK_PROXIMITY_IN_MASK'"
.IP "* 'proximity\-out\-mask' / '\s-1GDK_PROXIMITY_OUT_MASK\s0'" 4
.IX Item "'proximity-out-mask' / 'GDK_PROXIMITY_OUT_MASK'"
.IP "* 'substructure\-mask' / '\s-1GDK_SUBSTRUCTURE_MASK\s0'" 4
.IX Item "'substructure-mask' / 'GDK_SUBSTRUCTURE_MASK'"
.IP "* 'scroll\-mask' / '\s-1GDK_SCROLL_MASK\s0'" 4
.IX Item "'scroll-mask' / 'GDK_SCROLL_MASK'"
.IP "* 'all\-events\-mask' / '\s-1GDK_ALL_EVENTS_MASK\s0'" 4
.IX Item "'all-events-mask' / 'GDK_ALL_EVENTS_MASK'"
.PD
.Sh "enum Gtk2::Gdk::GrabStatus"
.IX Subsection "enum Gtk2::Gdk::GrabStatus"
.IP "* 'success' / '\s-1GDK_GRAB_SUCCESS\s0'" 4
.IX Item "'success' / 'GDK_GRAB_SUCCESS'"
.PD 0
.IP "* 'already\-grabbed' / '\s-1GDK_GRAB_ALREADY_GRABBED\s0'" 4
.IX Item "'already-grabbed' / 'GDK_GRAB_ALREADY_GRABBED'"
.IP "* 'invalid\-time' / '\s-1GDK_GRAB_INVALID_TIME\s0'" 4
.IX Item "'invalid-time' / 'GDK_GRAB_INVALID_TIME'"
.IP "* 'not\-viewable' / '\s-1GDK_GRAB_NOT_VIEWABLE\s0'" 4
.IX Item "'not-viewable' / 'GDK_GRAB_NOT_VIEWABLE'"
.IP "* 'frozen' / '\s-1GDK_GRAB_FROZEN\s0'" 4
.IX Item "'frozen' / 'GDK_GRAB_FROZEN'"
.PD
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Gnome2::Canvas, Glib::Object, Glib::InitiallyUnowned, Gtk2::Object
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2003\-2004 by the Gtk2\-Perl Team.
.PP
This software is licensed under the \s-1LGPL\s0; see Gnome2::Canvas for a full notice.
