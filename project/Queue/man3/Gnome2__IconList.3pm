.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.3
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Gnome2::IconList 3pm"
.TH Gnome2::IconList 3pm "2006-06-19" "perl v5.8.7" "User Contributed Perl Documentation"
.SH "NAME"
Gnome2::IconList
.SH "HIERARCHY"
.IX Header "HIERARCHY"
.Vb 8
\&  Glib::Object
\&  +\-\-\-\-Glib::Object::_Unregistered::GInitiallyUnowned
\&       +\-\-\-\-Gtk2::Object
\&            +\-\-\-\-Gtk2::Widget
\&                 +\-\-\-\-Gtk2::Container
\&                      +\-\-\-\-Gtk2::Layout
\&                           +\-\-\-\-Gnome2::Canvas
\&                                +\-\-\-\-Gnome2::IconList
.Ve
.SH "INTERFACES"
.IX Header "INTERFACES"
.Vb 1
\&  Gtk2::Atk::ImplementorIface
.Ve
.SH "METHODS"
.IX Header "METHODS"
.ie n .Sh "widget = Gnome2::IconList\->\fBnew\fP ($icon_width, $adj\fP, \f(CW$flags)"
.el .Sh "widget = Gnome2::IconList\->\fBnew\fP ($icon_width, \f(CW$adj\fP, \f(CW$flags\fP)"
.IX Subsection "widget = Gnome2::IconList->new ($icon_width, $adj, $flags)"
.RS 4
.ie n .IP "* $icon_width (integer)" 4
.el .IP "* \f(CW$icon_width\fR (integer)" 4
.IX Item "$icon_width (integer)"
.PD 0
.ie n .IP "* $adj (Gtk2::Adjustment)" 4
.el .IP "* \f(CW$adj\fR (Gtk2::Adjustment)" 4
.IX Item "$adj (Gtk2::Adjustment)"
.ie n .IP "* $flags (Gnome2::IconListFlags)" 4
.el .IP "* \f(CW$flags\fR (Gnome2::IconListFlags)" 4
.IX Item "$flags (Gnome2::IconListFlags)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "integer = $gil\fP\->\fBappend\fP ($icon_filename, \f(CW$text)"
.el .Sh "integer = \f(CW$gil\fP\->\fBappend\fP ($icon_filename, \f(CW$text\fP)"
.IX Subsection "integer = $gil->append ($icon_filename, $text)"
.RS 4
.ie n .IP "* $icon_filename (string)" 4
.el .IP "* \f(CW$icon_filename\fR (string)" 4
.IX Item "$icon_filename (string)"
.PD 0
.ie n .IP "* $text (string)" 4
.el .IP "* \f(CW$text\fR (string)" 4
.IX Item "$text (string)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "integer = $gil\fP\->\fBappend_pixbuf\fP ($im, \f(CW$icon_filename\fP, \f(CW$text)"
.el .Sh "integer = \f(CW$gil\fP\->\fBappend_pixbuf\fP ($im, \f(CW$icon_filename\fP, \f(CW$text\fP)"
.IX Subsection "integer = $gil->append_pixbuf ($im, $icon_filename, $text)"
.RS 4
.ie n .IP "* $im (Gtk2::Gdk::Pixbuf)" 4
.el .IP "* \f(CW$im\fR (Gtk2::Gdk::Pixbuf)" 4
.IX Item "$im (Gtk2::Gdk::Pixbuf)"
.PD 0
.ie n .IP "* $icon_filename (string)" 4
.el .IP "* \f(CW$icon_filename\fR (string)" 4
.IX Item "$icon_filename (string)"
.ie n .IP "* $text (string)" 4
.el .IP "* \f(CW$text\fR (string)" 4
.IX Item "$text (string)"
.RE
.RS 4
.RE
.PD
.Sh "$gil\->\fBclear\fP"
.IX Subsection "$gil->clear"
.Sh "$gil\->\fBset_col_spacing\fP ($pixels)"
.IX Subsection "$gil->set_col_spacing ($pixels)"
.RS 4
.ie n .IP "* $pixels (integer)" 4
.el .IP "* \f(CW$pixels\fR (integer)" 4
.IX Item "$pixels (integer)"
.RE
.RS 4
.RE
.ie n .Sh "integer = $gil\fP\->\fBfind_icon_from_filename ($filename)"
.el .Sh "integer = \f(CW$gil\fP\->\fBfind_icon_from_filename\fP ($filename)"
.IX Subsection "integer = $gil->find_icon_from_filename ($filename)"
.RS 4
.PD 0
.ie n .IP "* $filename (string)" 4
.el .IP "* \f(CW$filename\fR (string)" 4
.IX Item "$filename (string)"
.RE
.RS 4
.RE
.PD
.Sh "$gil\->\fBfocus_icon\fP ($idx)"
.IX Subsection "$gil->focus_icon ($idx)"
.RS 4
.ie n .IP "* $idx (integer)" 4
.el .IP "* \f(CW$idx\fR (integer)" 4
.IX Item "$idx (integer)"
.RE
.RS 4
.RE
.Sh "$gil\->\fBfreeze\fP"
.IX Subsection "$gil->freeze"
.Sh "$gil\->\fBset_hadjustment\fP ($hadj)"
.IX Subsection "$gil->set_hadjustment ($hadj)"
.RS 4
.PD 0
.ie n .IP "* $hadj (Gtk2::Adjustment)" 4
.el .IP "* \f(CW$hadj\fR (Gtk2::Adjustment)" 4
.IX Item "$hadj (Gtk2::Adjustment)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "integer = $gil\fP\->\fBget_icon_at\fP ($x, \f(CW$y)"
.el .Sh "integer = \f(CW$gil\fP\->\fBget_icon_at\fP ($x, \f(CW$y\fP)"
.IX Subsection "integer = $gil->get_icon_at ($x, $y)"
.RS 4
.ie n .IP "* $x (integer)" 4
.el .IP "* \f(CW$x\fR (integer)" 4
.IX Item "$x (integer)"
.PD 0
.ie n .IP "* $y (integer)" 4
.el .IP "* \f(CW$y\fR (integer)" 4
.IX Item "$y (integer)"
.RE
.RS 4
.RE
.PD
.Sh "$gil\->\fBset_icon_border\fP ($pixels)"
.IX Subsection "$gil->set_icon_border ($pixels)"
.RS 4
.ie n .IP "* $pixels (integer)" 4
.el .IP "* \f(CW$pixels\fR (integer)" 4
.IX Item "$pixels (integer)"
.RE
.RS 4
.RE
.ie n .Sh "string = $gil\fP\->\fBget_icon_filename ($idx)"
.el .Sh "string = \f(CW$gil\fP\->\fBget_icon_filename\fP ($idx)"
.IX Subsection "string = $gil->get_icon_filename ($idx)"
.RS 4
.PD 0
.ie n .IP "* $idx (integer)" 4
.el .IP "* \f(CW$idx\fR (integer)" 4
.IX Item "$idx (integer)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "visibility = $gil\fP\->\fBicon_is_visible ($pos)"
.el .Sh "visibility = \f(CW$gil\fP\->\fBicon_is_visible\fP ($pos)"
.IX Subsection "visibility = $gil->icon_is_visible ($pos)"
.RS 4
.ie n .IP "* $pos (integer)" 4
.el .IP "* \f(CW$pos\fR (integer)" 4
.IX Item "$pos (integer)"
.RE
.RS 4
.RE
.ie n .Sh "object = $gil\fP\->\fBget_icon_pixbuf_item ($idx)"
.el .Sh "object = \f(CW$gil\fP\->\fBget_icon_pixbuf_item\fP ($idx)"
.IX Subsection "object = $gil->get_icon_pixbuf_item ($idx)"
.RS 4
.PD 0
.ie n .IP "* $idx (integer)" 4
.el .IP "* \f(CW$idx\fR (integer)" 4
.IX Item "$idx (integer)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "icontextitem = $gil\fP\->\fBget_icon_text_item ($idx)"
.el .Sh "icontextitem = \f(CW$gil\fP\->\fBget_icon_text_item\fP ($idx)"
.IX Subsection "icontextitem = $gil->get_icon_text_item ($idx)"
.RS 4
.ie n .IP "* $idx (integer)" 4
.el .IP "* \f(CW$idx\fR (integer)" 4
.IX Item "$idx (integer)"
.RE
.RS 4
.RE
.Sh "$gil\->\fBset_icon_width\fP ($w)"
.IX Subsection "$gil->set_icon_width ($w)"
.RS 4
.PD 0
.ie n .IP "* $w (integer)" 4
.el .IP "* \f(CW$w\fR (integer)" 4
.IX Item "$w (integer)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "$gil\->\fBinsert\fP ($pos, $icon_filename\fP, \f(CW$text)"
.el .Sh "$gil\->\fBinsert\fP ($pos, \f(CW$icon_filename\fP, \f(CW$text\fP)"
.IX Subsection "$gil->insert ($pos, $icon_filename, $text)"
.RS 4
.ie n .IP "* $pos (integer)" 4
.el .IP "* \f(CW$pos\fR (integer)" 4
.IX Item "$pos (integer)"
.PD 0
.ie n .IP "* $icon_filename (string)" 4
.el .IP "* \f(CW$icon_filename\fR (string)" 4
.IX Item "$icon_filename (string)"
.ie n .IP "* $text (string)" 4
.el .IP "* \f(CW$text\fR (string)" 4
.IX Item "$text (string)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "$gil\->\fBinsert_pixbuf\fP ($pos, $im\fP, \f(CW$icon_filename\fP, \f(CW$text)"
.el .Sh "$gil\->\fBinsert_pixbuf\fP ($pos, \f(CW$im\fP, \f(CW$icon_filename\fP, \f(CW$text\fP)"
.IX Subsection "$gil->insert_pixbuf ($pos, $im, $icon_filename, $text)"
.RS 4
.ie n .IP "* $pos (integer)" 4
.el .IP "* \f(CW$pos\fR (integer)" 4
.IX Item "$pos (integer)"
.PD 0
.ie n .IP "* $im (Gtk2::Gdk::Pixbuf)" 4
.el .IP "* \f(CW$im\fR (Gtk2::Gdk::Pixbuf)" 4
.IX Item "$im (Gtk2::Gdk::Pixbuf)"
.ie n .IP "* $icon_filename (string)" 4
.el .IP "* \f(CW$icon_filename\fR (string)" 4
.IX Item "$icon_filename (string)"
.ie n .IP "* $text (string)" 4
.el .IP "* \f(CW$text\fR (string)" 4
.IX Item "$text (string)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "integer = $gil\fP\->\fBget_items_per_line"
.el .Sh "integer = \f(CW$gil\fP\->\fBget_items_per_line\fP"
.IX Subsection "integer = $gil->get_items_per_line"
.ie n .Sh "$gil\->\fBmoveto\fP ($pos, $yalign)"
.el .Sh "$gil\->\fBmoveto\fP ($pos, \f(CW$yalign\fP)"
.IX Subsection "$gil->moveto ($pos, $yalign)"
.RS 4
.ie n .IP "* $pos (integer)" 4
.el .IP "* \f(CW$pos\fR (integer)" 4
.IX Item "$pos (integer)"
.PD 0
.ie n .IP "* $yalign (double)" 4
.el .IP "* \f(CW$yalign\fR (double)" 4
.IX Item "$yalign (double)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "integer = $gil\fP\->\fBget_num_icons"
.el .Sh "integer = \f(CW$gil\fP\->\fBget_num_icons\fP"
.IX Subsection "integer = $gil->get_num_icons"
.Sh "$gil\->\fBremove\fP ($pos)"
.IX Subsection "$gil->remove ($pos)"
.RS 4
.ie n .IP "* $pos (integer)" 4
.el .IP "* \f(CW$pos\fR (integer)" 4
.IX Item "$pos (integer)"
.RE
.RS 4
.RE
.Sh "$gil\->\fBset_row_spacing\fP ($pixels)"
.IX Subsection "$gil->set_row_spacing ($pixels)"
.RS 4
.PD 0
.ie n .IP "* $pixels (integer)" 4
.el .IP "* \f(CW$pixels\fR (integer)" 4
.IX Item "$pixels (integer)"
.RE
.RS 4
.RE
.PD
.Sh "$gil\->\fBselect_all\fP"
.IX Subsection "$gil->select_all"
.Sh "$gil\->\fBselect_icon\fP ($pos)"
.IX Subsection "$gil->select_icon ($pos)"
.RS 4
.ie n .IP "* $pos (integer)" 4
.el .IP "* \f(CW$pos\fR (integer)" 4
.IX Item "$pos (integer)"
.RE
.RS 4
.RE
.ie n .Sh "list = $gil\fP\->\fBget_selection"
.el .Sh "list = \f(CW$gil\fP\->\fBget_selection\fP"
.IX Subsection "list = $gil->get_selection"
.RS 4
Returns a list of integers.
.RE
.ie n .Sh "selectionmode = $gil\fP\->\fBget_selection_mode"
.el .Sh "selectionmode = \f(CW$gil\fP\->\fBget_selection_mode\fP"
.IX Subsection "selectionmode = $gil->get_selection_mode"
.Sh "$gil\->\fBset_selection_mode\fP ($mode)"
.IX Subsection "$gil->set_selection_mode ($mode)"
.RS 4
.ie n .IP "* $mode (Gtk2::SelectionMode)" 4
.el .IP "* \f(CW$mode\fR (Gtk2::SelectionMode)" 4
.IX Item "$mode (Gtk2::SelectionMode)"
.RE
.RS 4
.RE
.Sh "$gil\->\fBset_separators\fP ($sep)"
.IX Subsection "$gil->set_separators ($sep)"
.RS 4
.PD 0
.ie n .IP "* $sep (string)" 4
.el .IP "* \f(CW$sep\fR (string)" 4
.IX Item "$sep (string)"
.RE
.RS 4
.RE
.PD
.Sh "$gil\->\fBset_text_spacing\fP ($pixels)"
.IX Subsection "$gil->set_text_spacing ($pixels)"
.RS 4
.ie n .IP "* $pixels (integer)" 4
.el .IP "* \f(CW$pixels\fR (integer)" 4
.IX Item "$pixels (integer)"
.RE
.RS 4
.RE
.Sh "$gil\->\fBthaw\fP"
.IX Subsection "$gil->thaw"
.ie n .Sh "integer = $gil\fP\->\fBunselect_all"
.el .Sh "integer = \f(CW$gil\fP\->\fBunselect_all\fP"
.IX Subsection "integer = $gil->unselect_all"
.Sh "$gil\->\fBunselect_icon\fP ($pos)"
.IX Subsection "$gil->unselect_icon ($pos)"
.RS 4
.PD 0
.ie n .IP "* $pos (integer)" 4
.el .IP "* \f(CW$pos\fR (integer)" 4
.IX Item "$pos (integer)"
.RE
.RS 4
.RE
.PD
.Sh "$gil\->\fBset_vadjustment\fP ($vadj)"
.IX Subsection "$gil->set_vadjustment ($vadj)"
.RS 4
.ie n .IP "* $vadj (Gtk2::Adjustment)" 4
.el .IP "* \f(CW$vadj\fR (Gtk2::Adjustment)" 4
.IX Item "$vadj (Gtk2::Adjustment)"
.RE
.RS 4
.RE
.SH "SIGNALS"
.IX Header "SIGNALS"
.PD 0
.IP "\fBselect-icon\fR (Gnome2::IconList, integer, Gtk2::Gdk::Event)" 4
.IX Item "select-icon (Gnome2::IconList, integer, Gtk2::Gdk::Event)"
.IP "\fBunselect-icon\fR (Gnome2::IconList, integer, Gtk2::Gdk::Event)" 4
.IX Item "unselect-icon (Gnome2::IconList, integer, Gtk2::Gdk::Event)"
.IP "\fBfocus-icon\fR (Gnome2::IconList, integer)" 4
.IX Item "focus-icon (Gnome2::IconList, integer)"
.IP "boolean = \fBtext-changed\fR (Gnome2::IconList, integer, string)" 4
.IX Item "boolean = text-changed (Gnome2::IconList, integer, string)"
.IP "\fBmove-cursor\fR (Gnome2::IconList, Gtk2::DirectionType, boolean)" 4
.IX Item "move-cursor (Gnome2::IconList, Gtk2::DirectionType, boolean)"
.IP "\fBtoggle-cursor-selection\fR (Gnome2::IconList)" 4
.IX Item "toggle-cursor-selection (Gnome2::IconList)"
.PD
.SH "ENUMS AND FLAGS"
.IX Header "ENUMS AND FLAGS"
.Sh "enum Gtk2::DirectionType"
.IX Subsection "enum Gtk2::DirectionType"
.IP "* 'tab\-forward' / '\s-1GTK_DIR_TAB_FORWARD\s0'" 4
.IX Item "'tab-forward' / 'GTK_DIR_TAB_FORWARD'"
.PD 0
.IP "* 'tab\-backward' / '\s-1GTK_DIR_TAB_BACKWARD\s0'" 4
.IX Item "'tab-backward' / 'GTK_DIR_TAB_BACKWARD'"
.IP "* 'up' / '\s-1GTK_DIR_UP\s0'" 4
.IX Item "'up' / 'GTK_DIR_UP'"
.IP "* 'down' / '\s-1GTK_DIR_DOWN\s0'" 4
.IX Item "'down' / 'GTK_DIR_DOWN'"
.IP "* 'left' / '\s-1GTK_DIR_LEFT\s0'" 4
.IX Item "'left' / 'GTK_DIR_LEFT'"
.IP "* 'right' / '\s-1GTK_DIR_RIGHT\s0'" 4
.IX Item "'right' / 'GTK_DIR_RIGHT'"
.PD
.Sh "enum Gtk2::SelectionMode"
.IX Subsection "enum Gtk2::SelectionMode"
.IP "* 'none' / '\s-1GTK_SELECTION_NONE\s0'" 4
.IX Item "'none' / 'GTK_SELECTION_NONE'"
.PD 0
.IP "* 'single' / '\s-1GTK_SELECTION_SINGLE\s0'" 4
.IX Item "'single' / 'GTK_SELECTION_SINGLE'"
.IP "* 'browse' / '\s-1GTK_SELECTION_BROWSE\s0'" 4
.IX Item "'browse' / 'GTK_SELECTION_BROWSE'"
.IP "* 'multiple' / '\s-1GTK_SELECTION_MULTIPLE\s0'" 4
.IX Item "'multiple' / 'GTK_SELECTION_MULTIPLE'"
.IP "* 'extended' / '\s-1GTK_SELECTION_EXTENDED\s0'" 4
.IX Item "'extended' / 'GTK_SELECTION_EXTENDED'"
.PD
.Sh "enum Gtk2::Visibility"
.IX Subsection "enum Gtk2::Visibility"
.IP "* 'none' / '\s-1GTK_VISIBILITY_NONE\s0'" 4
.IX Item "'none' / 'GTK_VISIBILITY_NONE'"
.PD 0
.IP "* 'partial' / '\s-1GTK_VISIBILITY_PARTIAL\s0'" 4
.IX Item "'partial' / 'GTK_VISIBILITY_PARTIAL'"
.IP "* 'full' / '\s-1GTK_VISIBILITY_FULL\s0'" 4
.IX Item "'full' / 'GTK_VISIBILITY_FULL'"
.PD
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Gnome2, Glib::Object, Glib::Object::_Unregistered::GInitiallyUnowned, Gtk2::Object, Gtk2::Widget, Gtk2::Container, Gtk2::Layout, Gnome2::Canvas
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2003\-2004 by the gtk2\-perl team.
.PP
This software is licensed under the \s-1LGPL\s0.  See Gnome2 for a full notice.
