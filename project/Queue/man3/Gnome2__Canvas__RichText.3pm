.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Gnome2::Canvas::RichText 3pm"
.TH Gnome2::Canvas::RichText 3pm "2007-02-26" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Gnome2::Canvas::RichText
.SH "HIERARCHY"
.IX Header "HIERARCHY"
.Vb 5
\&  Glib::Object
\&  +\-\-\-\-Glib::InitiallyUnowned
\&       +\-\-\-\-Gtk2::Object
\&            +\-\-\-\-Gnome2::Canvas::Item
\&                 +\-\-\-\-Gnome2::Canvas::RichText
.Ve
.SH "METHODS"
.IX Header "METHODS"
.ie n .Sh "textbuffer = $text\fP\->\fBget_buffer"
.el .Sh "textbuffer = \f(CW$text\fP\->\fBget_buffer\fP"
.IX Subsection "textbuffer = $text->get_buffer"
.Sh "$text\->\fBset_buffer\fP ($buffer)"
.IX Subsection "$text->set_buffer ($buffer)"
.RS 4
.ie n .IP "* $buffer (Gtk2::TextBuffer)" 4
.el .IP "* \f(CW$buffer\fR (Gtk2::TextBuffer)" 4
.IX Item "$buffer (Gtk2::TextBuffer)"
.RE
.RS 4
.RE
.Sh "$text\->\fBcopy_clipboard\fP"
.IX Subsection "$text->copy_clipboard"
.Sh "$text\->\fBcut_clipboard\fP"
.IX Subsection "$text->cut_clipboard"
.ie n .Sh "textiter = $text\fP\->\fBget_iter_at_location\fP ($x, \f(CW$y)"
.el .Sh "textiter = \f(CW$text\fP\->\fBget_iter_at_location\fP ($x, \f(CW$y\fP)"
.IX Subsection "textiter = $text->get_iter_at_location ($x, $y)"
.RS 4
.PD 0
.ie n .IP "* $x (integer)" 4
.el .IP "* \f(CW$x\fR (integer)" 4
.IX Item "$x (integer)"
.ie n .IP "* $y (integer)" 4
.el .IP "* \f(CW$y\fR (integer)" 4
.IX Item "$y (integer)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "rectangle = $text\fP\->\fBget_iter_location ($iter)"
.el .Sh "rectangle = \f(CW$text\fP\->\fBget_iter_location\fP ($iter)"
.IX Subsection "rectangle = $text->get_iter_location ($iter)"
.RS 4
.ie n .IP "* $iter (Gtk2::TextIter)" 4
.el .IP "* \f(CW$iter\fR (Gtk2::TextIter)" 4
.IX Item "$iter (Gtk2::TextIter)"
.RE
.RS 4
.RE
.Sh "$text\->\fBpaste_clipboard\fP"
.IX Subsection "$text->paste_clipboard"
.SH "PROPERTIES"
.IX Header "PROPERTIES"
.PD 0
.IP "'anchor' (Gtk2::AnchorType : readable / writable)" 4
.IX Item "'anchor' (Gtk2::AnchorType : readable / writable)"
.PD
Anchor point for text
.IP "'cursor\-blink' (boolean : readable / writable)" 4
.IX Item "'cursor-blink' (boolean : readable / writable)"
Does the cursor blink in this rich text item?
.IP "'cursor\-visible' (boolean : readable / writable)" 4
.IX Item "'cursor-visible' (boolean : readable / writable)"
Is the cursor visible in this rich text item?
.IP "'direction' (Gtk2::DirectionType : readable / writable)" 4
.IX Item "'direction' (Gtk2::DirectionType : readable / writable)"
Text direction
.IP "'editable' (boolean : readable / writable)" 4
.IX Item "'editable' (boolean : readable / writable)"
Is this rich text item editable?
.IP "'grow\-height' (boolean : readable / writable)" 4
.IX Item "'grow-height' (boolean : readable / writable)"
Should the text box height grow if the text does not fit?
.IP "'height' (double : readable / writable)" 4
.IX Item "'height' (double : readable / writable)"
Height for text box
.IP "'indent' (integer : readable / writable)" 4
.IX Item "'indent' (integer : readable / writable)"
Number of pixels for indentation
.IP "'justification' (Gtk2::Justification : readable / writable)" 4
.IX Item "'justification' (Gtk2::Justification : readable / writable)"
Justification mode
.IP "'left\-margin' (integer : readable / writable)" 4
.IX Item "'left-margin' (integer : readable / writable)"
Number of pixels in the left margin
.IP "'pixels\-above\-lines' (integer : readable / writable)" 4
.IX Item "'pixels-above-lines' (integer : readable / writable)"
Number of pixels to put above lines
.IP "'pixels\-below\-lines' (integer : readable / writable)" 4
.IX Item "'pixels-below-lines' (integer : readable / writable)"
Number of pixels to put below lines
.IP "'pixels\-inside\-wrap' (integer : readable / writable)" 4
.IX Item "'pixels-inside-wrap' (integer : readable / writable)"
Number of pixels to put inside the wrap
.IP "'right\-margin' (integer : readable / writable)" 4
.IX Item "'right-margin' (integer : readable / writable)"
Number of pixels in the right margin
.IP "'text' (string : readable / writable)" 4
.IX Item "'text' (string : readable / writable)"
Text to display
.IP "'visible' (boolean : readable / writable)" 4
.IX Item "'visible' (boolean : readable / writable)"
Is this rich text item visible?
.IP "'width' (double : readable / writable)" 4
.IX Item "'width' (double : readable / writable)"
Width for text box
.IP "'wrap\-mode' (Gtk2::WrapMode : readable / writable)" 4
.IX Item "'wrap-mode' (Gtk2::WrapMode : readable / writable)"
Wrap mode for multiline text
.IP "'x' (double : readable / writable)" 4
.IX Item "'x' (double : readable / writable)"
X position
.IP "'y' (double : readable / writable)" 4
.IX Item "'y' (double : readable / writable)"
Y position
.SH "SIGNALS"
.IX Header "SIGNALS"
.IP "\fBtag-changed\fR (Gnome2::Canvas::RichText, Glib::Object)" 4
.IX Item "tag-changed (Gnome2::Canvas::RichText, Glib::Object)"
.SH "ENUMS AND FLAGS"
.IX Header "ENUMS AND FLAGS"
.Sh "enum Gtk2::AnchorType"
.IX Subsection "enum Gtk2::AnchorType"
.PD 0
.IP "* 'center' / '\s-1GTK_ANCHOR_CENTER\s0'" 4
.IX Item "'center' / 'GTK_ANCHOR_CENTER'"
.IP "* 'north' / '\s-1GTK_ANCHOR_NORTH\s0'" 4
.IX Item "'north' / 'GTK_ANCHOR_NORTH'"
.IP "* 'north\-west' / '\s-1GTK_ANCHOR_NORTH_WEST\s0'" 4
.IX Item "'north-west' / 'GTK_ANCHOR_NORTH_WEST'"
.IP "* 'north\-east' / '\s-1GTK_ANCHOR_NORTH_EAST\s0'" 4
.IX Item "'north-east' / 'GTK_ANCHOR_NORTH_EAST'"
.IP "* 'south' / '\s-1GTK_ANCHOR_SOUTH\s0'" 4
.IX Item "'south' / 'GTK_ANCHOR_SOUTH'"
.IP "* 'south\-west' / '\s-1GTK_ANCHOR_SOUTH_WEST\s0'" 4
.IX Item "'south-west' / 'GTK_ANCHOR_SOUTH_WEST'"
.IP "* 'south\-east' / '\s-1GTK_ANCHOR_SOUTH_EAST\s0'" 4
.IX Item "'south-east' / 'GTK_ANCHOR_SOUTH_EAST'"
.IP "* 'west' / '\s-1GTK_ANCHOR_WEST\s0'" 4
.IX Item "'west' / 'GTK_ANCHOR_WEST'"
.IP "* 'east' / '\s-1GTK_ANCHOR_EAST\s0'" 4
.IX Item "'east' / 'GTK_ANCHOR_EAST'"
.IP "* 'n' / '\s-1GTK_ANCHOR_N\s0'" 4
.IX Item "'n' / 'GTK_ANCHOR_N'"
.IP "* 'nw' / '\s-1GTK_ANCHOR_NW\s0'" 4
.IX Item "'nw' / 'GTK_ANCHOR_NW'"
.IP "* 'ne' / '\s-1GTK_ANCHOR_NE\s0'" 4
.IX Item "'ne' / 'GTK_ANCHOR_NE'"
.IP "* 's' / '\s-1GTK_ANCHOR_S\s0'" 4
.IX Item "'s' / 'GTK_ANCHOR_S'"
.IP "* 'sw' / '\s-1GTK_ANCHOR_SW\s0'" 4
.IX Item "'sw' / 'GTK_ANCHOR_SW'"
.IP "* 'se' / '\s-1GTK_ANCHOR_SE\s0'" 4
.IX Item "'se' / 'GTK_ANCHOR_SE'"
.IP "* 'w' / '\s-1GTK_ANCHOR_W\s0'" 4
.IX Item "'w' / 'GTK_ANCHOR_W'"
.IP "* 'e' / '\s-1GTK_ANCHOR_E\s0'" 4
.IX Item "'e' / 'GTK_ANCHOR_E'"
.PD
.Sh "enum Gtk2::DirectionType"
.IX Subsection "enum Gtk2::DirectionType"
.IP "* 'tab\-forward' / '\s-1GTK_DIR_TAB_FORWARD\s0'" 4
.IX Item "'tab-forward' / 'GTK_DIR_TAB_FORWARD'"
.PD 0
.IP "* 'tab\-backward' / '\s-1GTK_DIR_TAB_BACKWARD\s0'" 4
.IX Item "'tab-backward' / 'GTK_DIR_TAB_BACKWARD'"
.IP "* 'up' / '\s-1GTK_DIR_UP\s0'" 4
.IX Item "'up' / 'GTK_DIR_UP'"
.IP "* 'down' / '\s-1GTK_DIR_DOWN\s0'" 4
.IX Item "'down' / 'GTK_DIR_DOWN'"
.IP "* 'left' / '\s-1GTK_DIR_LEFT\s0'" 4
.IX Item "'left' / 'GTK_DIR_LEFT'"
.IP "* 'right' / '\s-1GTK_DIR_RIGHT\s0'" 4
.IX Item "'right' / 'GTK_DIR_RIGHT'"
.PD
.Sh "enum Gtk2::Justification"
.IX Subsection "enum Gtk2::Justification"
.IP "* 'left' / '\s-1GTK_JUSTIFY_LEFT\s0'" 4
.IX Item "'left' / 'GTK_JUSTIFY_LEFT'"
.PD 0
.IP "* 'right' / '\s-1GTK_JUSTIFY_RIGHT\s0'" 4
.IX Item "'right' / 'GTK_JUSTIFY_RIGHT'"
.IP "* 'center' / '\s-1GTK_JUSTIFY_CENTER\s0'" 4
.IX Item "'center' / 'GTK_JUSTIFY_CENTER'"
.IP "* 'fill' / '\s-1GTK_JUSTIFY_FILL\s0'" 4
.IX Item "'fill' / 'GTK_JUSTIFY_FILL'"
.PD
.Sh "enum Gtk2::WrapMode"
.IX Subsection "enum Gtk2::WrapMode"
.IP "* 'none' / '\s-1GTK_WRAP_NONE\s0'" 4
.IX Item "'none' / 'GTK_WRAP_NONE'"
.PD 0
.IP "* 'char' / '\s-1GTK_WRAP_CHAR\s0'" 4
.IX Item "'char' / 'GTK_WRAP_CHAR'"
.IP "* 'word' / '\s-1GTK_WRAP_WORD\s0'" 4
.IX Item "'word' / 'GTK_WRAP_WORD'"
.IP "* 'word\-char' / '\s-1GTK_WRAP_WORD_CHAR\s0'" 4
.IX Item "'word-char' / 'GTK_WRAP_WORD_CHAR'"
.PD
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Gnome2::Canvas, Glib::Object, Glib::InitiallyUnowned, Gtk2::Object, Gnome2::Canvas::Item
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2003\-2004 by the Gtk2\-Perl Team.
.PP
This software is licensed under the \s-1LGPL\s0; see Gnome2::Canvas for a full notice.
