.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.3
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Gnome2::PasswordDialog 3pm"
.TH Gnome2::PasswordDialog 3pm "2006-06-19" "perl v5.8.7" "User Contributed Perl Documentation"
.SH "NAME"
Gnome2::PasswordDialog
.SH "HIERARCHY"
.IX Header "HIERARCHY"
.Vb 9
\&  Glib::Object
\&  +\-\-\-\-Glib::Object::_Unregistered::GInitiallyUnowned
\&       +\-\-\-\-Gtk2::Object
\&            +\-\-\-\-Gtk2::Widget
\&                 +\-\-\-\-Gtk2::Container
\&                      +\-\-\-\-Gtk2::Bin
\&                           +\-\-\-\-Gtk2::Window
\&                                +\-\-\-\-Gtk2::Dialog
\&                                     +\-\-\-\-Gnome2::PasswordDialog
.Ve
.SH "INTERFACES"
.IX Header "INTERFACES"
.Vb 1
\&  Gtk2::Atk::ImplementorIface
.Ve
.SH "METHODS"
.IX Header "METHODS"
.ie n .Sh "widget = Gnome2::PasswordDialog\->\fBnew\fP ($dialog_title, $message\fP, \f(CW$username\fP, \f(CW$password\fP, \f(CW$readonly_username)"
.el .Sh "widget = Gnome2::PasswordDialog\->\fBnew\fP ($dialog_title, \f(CW$message\fP, \f(CW$username\fP, \f(CW$password\fP, \f(CW$readonly_username\fP)"
.IX Subsection "widget = Gnome2::PasswordDialog->new ($dialog_title, $message, $username, $password, $readonly_username)"
.RS 4
.ie n .IP "* $dialog_title (string)" 4
.el .IP "* \f(CW$dialog_title\fR (string)" 4
.IX Item "$dialog_title (string)"
.PD 0
.ie n .IP "* $message (string)" 4
.el .IP "* \f(CW$message\fR (string)" 4
.IX Item "$message (string)"
.ie n .IP "* $username (string)" 4
.el .IP "* \f(CW$username\fR (string)" 4
.IX Item "$username (string)"
.ie n .IP "* $password (string)" 4
.el .IP "* \f(CW$password\fR (string)" 4
.IX Item "$password (string)"
.ie n .IP "* $readonly_username (boolean)" 4
.el .IP "* \f(CW$readonly_username\fR (boolean)" 4
.IX Item "$readonly_username (boolean)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "boolean = $password_dialog\fP\->\fBanon_selected"
.el .Sh "boolean = \f(CW$password_dialog\fP\->\fBanon_selected\fP"
.IX Subsection "boolean = $password_dialog->anon_selected"
.ie n .Sh "string = $password_dialog\fP\->\fBget_domain"
.el .Sh "string = \f(CW$password_dialog\fP\->\fBget_domain\fP"
.IX Subsection "string = $password_dialog->get_domain"
.Sh "$password_dialog\->\fBset_domain\fP ($domain)"
.IX Subsection "$password_dialog->set_domain ($domain)"
.RS 4
.ie n .IP "* $domain (string)" 4
.el .IP "* \f(CW$domain\fR (string)" 4
.IX Item "$domain (string)"
.RE
.RS 4
.RE
.ie n .Sh "string = $password_dialog\fP\->\fBget_password"
.el .Sh "string = \f(CW$password_dialog\fP\->\fBget_password\fP"
.IX Subsection "string = $password_dialog->get_password"
.Sh "$password_dialog\->\fBset_password\fP ($password)"
.IX Subsection "$password_dialog->set_password ($password)"
.RS 4
.PD 0
.ie n .IP "* $password (string)" 4
.el .IP "* \f(CW$password\fR (string)" 4
.IX Item "$password (string)"
.RE
.RS 4
.RE
.PD
.Sh "$password_dialog\->\fBset_readonly_domain\fP ($readonly)"
.IX Subsection "$password_dialog->set_readonly_domain ($readonly)"
.RS 4
.ie n .IP "* $readonly (boolean)" 4
.el .IP "* \f(CW$readonly\fR (boolean)" 4
.IX Item "$readonly (boolean)"
.RE
.RS 4
.RE
.Sh "$password_dialog\->\fBset_readonly_username\fP ($readonly)"
.IX Subsection "$password_dialog->set_readonly_username ($readonly)"
.RS 4
.PD 0
.ie n .IP "* $readonly (boolean)" 4
.el .IP "* \f(CW$readonly\fR (boolean)" 4
.IX Item "$readonly (boolean)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "passworddialogremember = $password_dialog\fP\->\fBget_remember"
.el .Sh "passworddialogremember = \f(CW$password_dialog\fP\->\fBget_remember\fP"
.IX Subsection "passworddialogremember = $password_dialog->get_remember"
.Sh "$password_dialog\->\fBset_remember\fP ($remember)"
.IX Subsection "$password_dialog->set_remember ($remember)"
.RS 4
.ie n .IP "* $remember (Gnome2::PasswordDialogRemember)" 4
.el .IP "* \f(CW$remember\fR (Gnome2::PasswordDialogRemember)" 4
.IX Item "$remember (Gnome2::PasswordDialogRemember)"
.RE
.RS 4
.RE
.ie n .Sh "boolean = $password_dialog\fP\->\fBrun_and_block"
.el .Sh "boolean = \f(CW$password_dialog\fP\->\fBrun_and_block\fP"
.IX Subsection "boolean = $password_dialog->run_and_block"
.Sh "$password_dialog\->\fBset_show_domain\fP ($show)"
.IX Subsection "$password_dialog->set_show_domain ($show)"
.RS 4
.PD 0
.ie n .IP "* $show (boolean)" 4
.el .IP "* \f(CW$show\fR (boolean)" 4
.IX Item "$show (boolean)"
.RE
.RS 4
.RE
.PD
.Sh "$password_dialog\->\fBset_show_password\fP ($show)"
.IX Subsection "$password_dialog->set_show_password ($show)"
.RS 4
.ie n .IP "* $show (boolean)" 4
.el .IP "* \f(CW$show\fR (boolean)" 4
.IX Item "$show (boolean)"
.RE
.RS 4
.RE
.Sh "$password_dialog\->\fBset_show_remember\fP ($show_remember)"
.IX Subsection "$password_dialog->set_show_remember ($show_remember)"
.RS 4
.PD 0
.ie n .IP "* $show_remember (boolean)" 4
.el .IP "* \f(CW$show_remember\fR (boolean)" 4
.IX Item "$show_remember (boolean)"
.RE
.RS 4
.RE
.PD
.Sh "$password_dialog\->\fBset_show_username\fP ($show)"
.IX Subsection "$password_dialog->set_show_username ($show)"
.RS 4
.ie n .IP "* $show (boolean)" 4
.el .IP "* \f(CW$show\fR (boolean)" 4
.IX Item "$show (boolean)"
.RE
.RS 4
.RE
.Sh "$password_dialog\->\fBset_show_userpass_buttons\fP ($show_userpass_buttons)"
.IX Subsection "$password_dialog->set_show_userpass_buttons ($show_userpass_buttons)"
.RS 4
.PD 0
.ie n .IP "* $show_userpass_buttons (boolean)" 4
.el .IP "* \f(CW$show_userpass_buttons\fR (boolean)" 4
.IX Item "$show_userpass_buttons (boolean)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "string = $password_dialog\fP\->\fBget_username"
.el .Sh "string = \f(CW$password_dialog\fP\->\fBget_username\fP"
.IX Subsection "string = $password_dialog->get_username"
.Sh "$password_dialog\->\fBset_username\fP ($username)"
.IX Subsection "$password_dialog->set_username ($username)"
.RS 4
.ie n .IP "* $username (string)" 4
.el .IP "* \f(CW$username\fR (string)" 4
.IX Item "$username (string)"
.RE
.RS 4
.RE
.SH "ENUMS AND FLAGS"
.IX Header "ENUMS AND FLAGS"
.Sh "enum Gnome2::PasswordDialogRemember"
.IX Subsection "enum Gnome2::PasswordDialogRemember"
.PD 0
.IP "* 'nothing' / '\s-1GNOME_PASSWORD_DIALOG_REMEMBER_NOTHING\s0'" 4
.IX Item "'nothing' / 'GNOME_PASSWORD_DIALOG_REMEMBER_NOTHING'"
.IP "* 'session' / '\s-1GNOME_PASSWORD_DIALOG_REMEMBER_SESSION\s0'" 4
.IX Item "'session' / 'GNOME_PASSWORD_DIALOG_REMEMBER_SESSION'"
.IP "* 'forever' / '\s-1GNOME_PASSWORD_DIALOG_REMEMBER_FOREVER\s0'" 4
.IX Item "'forever' / 'GNOME_PASSWORD_DIALOG_REMEMBER_FOREVER'"
.PD
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Gnome2, Glib::Object, Glib::Object::_Unregistered::GInitiallyUnowned, Gtk2::Object, Gtk2::Widget, Gtk2::Container, Gtk2::Bin, Gtk2::Window, Gtk2::Dialog
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2003\-2004 by the gtk2\-perl team.
.PP
This software is licensed under the \s-1LGPL\s0.  See Gnome2 for a full notice.
