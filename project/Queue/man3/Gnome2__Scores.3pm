.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.3
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Gnome2::Scores 3pm"
.TH Gnome2::Scores 3pm "2006-06-19" "perl v5.8.7" "User Contributed Perl Documentation"
.SH "NAME"
Gnome2::Scores
.SH "HIERARCHY"
.IX Header "HIERARCHY"
.Vb 9
\&  Glib::Object
\&  +\-\-\-\-Glib::Object::_Unregistered::GInitiallyUnowned
\&       +\-\-\-\-Gtk2::Object
\&            +\-\-\-\-Gtk2::Widget
\&                 +\-\-\-\-Gtk2::Container
\&                      +\-\-\-\-Gtk2::Bin
\&                           +\-\-\-\-Gtk2::Window
\&                                +\-\-\-\-Gtk2::Dialog
\&                                     +\-\-\-\-Gnome2::Scores
.Ve
.SH "INTERFACES"
.IX Header "INTERFACES"
.Vb 1
\&  Gtk2::Atk::ImplementorIface
.Ve
.SH "METHODS"
.IX Header "METHODS"
.ie n .Sh "widget = Gnome2::Scores\->\fBnew\fP ($names, $scores\fP, \f(CW$times\fP, \f(CW$clear)"
.el .Sh "widget = Gnome2::Scores\->\fBnew\fP ($names, \f(CW$scores\fP, \f(CW$times\fP, \f(CW$clear\fP)"
.IX Subsection "widget = Gnome2::Scores->new ($names, $scores, $times, $clear)"
.RS 4
.ie n .IP "* $names (scalar) \- reference to an array" 4
.el .IP "* \f(CW$names\fR (scalar) \- reference to an array" 4
.IX Item "$names (scalar) - reference to an array"
.PD 0
.ie n .IP "* $scores (scalar) \- reference to an array" 4
.el .IP "* \f(CW$scores\fR (scalar) \- reference to an array" 4
.IX Item "$scores (scalar) - reference to an array"
.ie n .IP "* $times (scalar) \- reference to an array" 4
.el .IP "* \f(CW$times\fR (scalar) \- reference to an array" 4
.IX Item "$times (scalar) - reference to an array"
.ie n .IP "* $clear (boolean)" 4
.el .IP "* \f(CW$clear\fR (boolean)" 4
.IX Item "$clear (boolean)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "$gs\->\fBset_color\fP ($n, $col)"
.el .Sh "$gs\->\fBset_color\fP ($n, \f(CW$col\fP)"
.IX Subsection "$gs->set_color ($n, $col)"
.RS 4
.ie n .IP "* $n (integer)" 4
.el .IP "* \f(CW$n\fR (integer)" 4
.IX Item "$n (integer)"
.PD 0
.ie n .IP "* $col (Gtk2::Gdk::Color)" 4
.el .IP "* \f(CW$col\fR (Gtk2::Gdk::Color)" 4
.IX Item "$col (Gtk2::Gdk::Color)"
.RE
.RS 4
.RE
.PD
.Sh "$gs\->\fBset_colors\fP ($col)"
.IX Subsection "$gs->set_colors ($col)"
.RS 4
.ie n .IP "* $col (Gtk2::Gdk::Color)" 4
.el .IP "* \f(CW$col\fR (Gtk2::Gdk::Color)" 4
.IX Item "$col (Gtk2::Gdk::Color)"
.RE
.RS 4
.RE
.Sh "$gs\->\fBset_current_player\fP ($i)"
.IX Subsection "$gs->set_current_player ($i)"
.RS 4
.PD 0
.ie n .IP "* $i (integer)" 4
.el .IP "* \f(CW$i\fR (integer)" 4
.IX Item "$i (integer)"
.RE
.RS 4
.RE
.PD
.Sh "$gs\->\fBset_def_color\fP ($col)"
.IX Subsection "$gs->set_def_color ($col)"
.RS 4
.ie n .IP "* $col (Gtk2::Gdk::Color)" 4
.el .IP "* \f(CW$col\fR (Gtk2::Gdk::Color)" 4
.IX Item "$col (Gtk2::Gdk::Color)"
.RE
.RS 4
.RE
.ie n .Sh "widget = Gnome2::Scores\->\fBdisplay\fP ($title, $app_name\fP, \f(CW$level\fP, \f(CW$pos)"
.el .Sh "widget = Gnome2::Scores\->\fBdisplay\fP ($title, \f(CW$app_name\fP, \f(CW$level\fP, \f(CW$pos\fP)"
.IX Subsection "widget = Gnome2::Scores->display ($title, $app_name, $level, $pos)"
.RS 4
.PD 0
.ie n .IP "* $title (string)" 4
.el .IP "* \f(CW$title\fR (string)" 4
.IX Item "$title (string)"
.ie n .IP "* $app_name (string)" 4
.el .IP "* \f(CW$app_name\fR (string)" 4
.IX Item "$app_name (string)"
.ie n .IP "* $level (string)" 4
.el .IP "* \f(CW$level\fR (string)" 4
.IX Item "$level (string)"
.ie n .IP "* $pos (integer)" 4
.el .IP "* \f(CW$pos\fR (integer)" 4
.IX Item "$pos (integer)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "widget = Gnome2::Scores\->\fBdisplay_with_pixmap\fP ($pixmap_logo, $app_name\fP, \f(CW$level\fP, \f(CW$pos)"
.el .Sh "widget = Gnome2::Scores\->\fBdisplay_with_pixmap\fP ($pixmap_logo, \f(CW$app_name\fP, \f(CW$level\fP, \f(CW$pos\fP)"
.IX Subsection "widget = Gnome2::Scores->display_with_pixmap ($pixmap_logo, $app_name, $level, $pos)"
.RS 4
.ie n .IP "* $pixmap_logo (string)" 4
.el .IP "* \f(CW$pixmap_logo\fR (string)" 4
.IX Item "$pixmap_logo (string)"
.PD 0
.ie n .IP "* $app_name (string)" 4
.el .IP "* \f(CW$app_name\fR (string)" 4
.IX Item "$app_name (string)"
.ie n .IP "* $level (string)" 4
.el .IP "* \f(CW$level\fR (string)" 4
.IX Item "$level (string)"
.ie n .IP "* $pos (integer)" 4
.el .IP "* \f(CW$pos\fR (integer)" 4
.IX Item "$pos (integer)"
.RE
.RS 4
.RE
.PD
.ie n .Sh "$gs\->\fBset_logo_label\fP ($txt, $font\fP, \f(CW$col)"
.el .Sh "$gs\->\fBset_logo_label\fP ($txt, \f(CW$font\fP, \f(CW$col\fP)"
.IX Subsection "$gs->set_logo_label ($txt, $font, $col)"
.RS 4
.ie n .IP "* $txt (string)" 4
.el .IP "* \f(CW$txt\fR (string)" 4
.IX Item "$txt (string)"
.PD 0
.ie n .IP "* $font (string)" 4
.el .IP "* \f(CW$font\fR (string)" 4
.IX Item "$font (string)"
.ie n .IP "* $col (Gtk2::Gdk::Color)" 4
.el .IP "* \f(CW$col\fR (Gtk2::Gdk::Color)" 4
.IX Item "$col (Gtk2::Gdk::Color)"
.RE
.RS 4
.RE
.PD
.Sh "$gs\->\fBset_logo_label_title\fP ($txt)"
.IX Subsection "$gs->set_logo_label_title ($txt)"
.RS 4
.ie n .IP "* $txt (string)" 4
.el .IP "* \f(CW$txt\fR (string)" 4
.IX Item "$txt (string)"
.RE
.RS 4
.RE
.Sh "$gs\->\fBset_logo_pixmap\fP ($pix_name)"
.IX Subsection "$gs->set_logo_pixmap ($pix_name)"
.RS 4
.PD 0
.ie n .IP "* $pix_name (string)" 4
.el .IP "* \f(CW$pix_name\fR (string)" 4
.IX Item "$pix_name (string)"
.RE
.RS 4
.RE
.PD
.Sh "$gs\->\fBset_logo_widget\fP ($w)"
.IX Subsection "$gs->set_logo_widget ($w)"
.RS 4
.ie n .IP "* $w (Gtk2::Widget)" 4
.el .IP "* \f(CW$w\fR (Gtk2::Widget)" 4
.IX Item "$w (Gtk2::Widget)"
.RE
.RS 4
.RE
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Gnome2, Glib::Object, Glib::Object::_Unregistered::GInitiallyUnowned, Gtk2::Object, Gtk2::Widget, Gtk2::Container, Gtk2::Bin, Gtk2::Window, Gtk2::Dialog
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2003\-2004 by the gtk2\-perl team.
.PP
This software is licensed under the \s-1LGPL\s0.  See Gnome2 for a full notice.
